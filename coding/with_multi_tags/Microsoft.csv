problem_statement,titleslug,title,tags,num_occur
"You have observations of n + m 6-sided dice rolls with each face numbered from 1 to 6. n of the observations went missing, and you only have the observations of m rolls. Fortunately, you have also calculated the average value of the n + m rolls. You are given an integer array rolls of length m where rolls[i] is the value of the ith observation. You are also given the two integers mean and n. Return an array of length n containing the missing observations such that the average value of the n + m rolls is exactly mean. If there are multiple valid answers, return any of them. If no such array exists, return an empty array. The average value of a set of k numbers is the sum of the numbers divided by k. Note that mean is an integer, so the sum of the n + m rolls should be divisible by n + m.  ",find-missing-observations,Find Missing Observations,"Array, Math, Simulation",Amazon
"Design a data structure that follows the constraints of a Least Recently Used (LRU) cache. Implement the LRUCache class:  LRUCache(int capacity) Initialize the LRU cache with positive size capacity. int get(int key) Return the value of the key if the key exists, otherwise return -1. void put(int key, int value) Update the value of the key if the key exists. Otherwise, add the key-value pair to the cache. If the number of keys exceeds the capacity from this operation, evict the least recently used key.  The functions get and put must each run in O(1) average time complexity.  ",lru-cache,LRU Cache,"Hash Table, Linked List, Design, Doubly-Linked List",52
There is a function signFunc(x) that returns:  1 if x is positive. -1 if x is negative. 0 if x is equal to 0.  You are given an integer array nums. Let product be the product of all values in the array nums. Return signFunc(product).  ,sign-of-the-product-of-an-array,Sign of the Product of an Array,"Array, Math",45
"Given an m x n 2D binary grid grid which represents a map of '1's (land) and '0's (water), return the number of islands. An island is surrounded by water and is formed by connecting adjacent lands horizontally or vertically. You may assume all four edges of the grid are all surrounded by water.  ",number-of-islands,Number of Islands,"Array, Depth-First Search, Breadth-First Search, Union Find, Matrix",42
"Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target. You may assume that each input would have exactly one solution, and you may not use the same element twice. You can return the answer in any order.  ",two-sum,Two Sum,"Array, Hash Table",39
"Given an input string s, reverse the order of the words. A word is defined as a sequence of non-space characters. The words in s will be separated by at least one space. Return a string of the words in reverse order concatenated by a single space. Note that s may contain leading or trailing spaces or multiple spaces between two words. The returned string should only have a single space separating the words. Do not include any extra spaces.  ",reverse-words-in-a-string,Reverse Words in a String,"Two Pointers, String",34
"Given an array of strings strs, group the anagrams together. You can return the answer in any order. An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.  ",group-anagrams,Group Anagrams,"Array, Hash Table, String, Sorting",29
"Given a string s, find the length of the longest substring without repeating characters.  ",longest-substring-without-repeating-characters,Longest Substring Without Repeating Characters,"Hash Table, String, Sliding Window",29
"Given an m x n matrix, return all elements of the matrix in spiral order.  ",spiral-matrix,Spiral Matrix,"Array, Matrix, Simulation",26
"There is an integer array nums sorted in ascending order (with distinct values). Prior to being passed to your function, nums is possibly rotated at an unknown pivot index k (1 <= k < nums.length) such that the resulting array is [nums[k], nums[k+1], ..., nums[n-1], nums[0], nums[1], ..., nums[k-1]] (0-indexed). For example, [0,1,2,4,5,6,7] might be rotated at pivot index 3 and become [4,5,6,7,0,1,2]. Given the array nums after the possible rotation and an integer target, return the index of target if it is in nums, or -1 if it is not in nums. You must write an algorithm with O(log n) runtime complexity.  ",search-in-rotated-sorted-array,Search in Rotated Sorted Array,"Array, Binary Search",24
"Given an integer n, return any array containing n unique integers such that they add up to 0.  ",find-n-unique-integers-sum-up-to-zero,Find N Unique Integers Sum up to Zero,"Array, Math",22
"Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid. An input string is valid if:  Open brackets must be closed by the same type of brackets. Open brackets must be closed in the correct order. Every close bracket has a corresponding open bracket of the same type.   ",valid-parentheses,Valid Parentheses,"String, Stack",22
"Serialization is the process of converting a data structure or object into a sequence of bits so that it can be stored in a file or memory buffer, or transmitted across a network connection link to be reconstructed later in the same or another computer environment. Design an algorithm to serialize and deserialize a binary tree. There is no restriction on how your serialization/deserialization algorithm should work. You just need to ensure that a binary tree can be serialized to a string and this string can be deserialized to the original tree structure. Clarification: The input/output format is the same as how LeetCode serializes a binary tree. You do not necessarily need to follow this format, so please be creative and come up with different approaches yourself.  ",serialize-and-deserialize-binary-tree,Serialize and Deserialize Binary Tree,"String, Tree, Depth-First Search, Breadth-First Search, Design, Binary Tree",20
"Given a string containing digits from 2-9 inclusive, return all possible letter combinations that the number could represent. Return the answer in any order. A mapping of digits to letters (just like on the telephone buttons) is given below. Note that 1 does not map to any letters.   ",letter-combinations-of-a-phone-number,Letter Combinations of a Phone Number,"Hash Table, String, Backtracking",20
"Given an integer array nums, return all the triplets [nums[i], nums[j], nums[k]] such that i != j, i != k, and j != k, and nums[i] + nums[j] + nums[k] == 0. Notice that the solution set must not contain duplicate triplets.  ",3sum,3Sum,"Array, Two Pointers, Sorting",20
"Given a string s, return the longest palindromic substring in s.  ",longest-palindromic-substring,Longest Palindromic Substring,"String, Dynamic Programming",18
" A cinema has n rows of seats, numbered from 1 to n and there are ten seats in each row, labelled from 1 to 10 as shown in the figure above. Given the array reservedSeats containing the numbers of seats already reserved, for example, reservedSeats[i] = [3,8] means the seat located in row 3 and labelled with 8 is already reserved. Return the maximum number of four-person groups you can assign on the cinema seats. A four-person group occupies four adjacent seats in one single row. Seats across an aisle (such as [3,3] and [3,4]) are not considered to be adjacent, but there is an exceptional case on which an aisle split a four-person group, in that case, the aisle split a four-person group in the middle, which means to have two people on each side.  ",cinema-seat-allocation,Cinema Seat Allocation,"Array, Hash Table, Greedy, Bit Manipulation",17
"You are given an array of k linked-lists lists, each linked-list is sorted in ascending order. Merge all the linked-lists into one sorted linked-list and return it.  ",merge-k-sorted-lists,Merge k Sorted Lists,"Linked List, Divide and Conquer, Heap (Priority Queue), Merge Sort",17
"You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list. You may assume the two numbers do not contain any leading zero, except the number 0 itself.  ",add-two-numbers,Add Two Numbers,"Linked List, Math, Recursion",17
"Given an m x n grid of characters board and a string word, return true if word exists in the grid. The word can be constructed from letters of sequentially adjacent cells, where adjacent cells are horizontally or vertically neighboring. The same letter cell may not be used more than once.  ",word-search,Word Search,"Array, Backtracking, Matrix",16
"Given an unsorted integer array nums, return the smallest missing positive integer. You must implement an algorithm that runs in O(n) time and uses constant extra space.  ",first-missing-positive,First Missing Positive,"Array, Hash Table",16
"Implement the myAtoi(string s) function, which converts a string to a 32-bit signed integer (similar to C/C++'s atoi function). The algorithm for myAtoi(string s) is as follows:  Read in and ignore any leading whitespace. Check if the next character (if not already at the end of the string) is '-' or '+'. Read this character in if it is either. This determines if the final result is negative or positive respectively. Assume the result is positive if neither is present. Read in next the characters until the next non-digit character or the end of the input is reached. The rest of the string is ignored. Convert these digits into an integer (i.e. ""123"" -> 123, ""0032"" -> 32). If no digits were read, then the integer is 0. Change the sign as necessary (from step 2). If the integer is out of the 32-bit signed integer range [-231, 231 - 1], then clamp the integer so that it remains in the range. Specifically, integers less than -231 should be clamped to -231, and integers greater than 231 - 1 should be clamped to 231 - 1. Return the integer as the final result.  Note:  Only the space character ' ' is considered a whitespace character. Do not ignore any characters other than the leading whitespace or the rest of the string after the digits.   ",string-to-integer-atoi,String to Integer (atoi),String,16
"Given an integer array nums, return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i]. The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer. You must write an algorithm that runs in O(n) time and without using the division operation.  ",product-of-array-except-self,Product of Array Except Self,"Array, Prefix Sum",15
"Given an array of intervals where intervals[i] = [starti, endi], merge all overlapping intervals, and return an array of the non-overlapping intervals that cover all the intervals in the input.  ",merge-intervals,Merge Intervals,"Array, Sorting",15
"Given an integer array nums, find the subarray with the largest sum, and return its sum.  ",maximum-subarray,Maximum Subarray,"Array, Divide and Conquer, Dynamic Programming",15
"Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).  ",median-of-two-sorted-arrays,Median of Two Sorted Arrays,"Array, Binary Search, Divide and Conquer",15
"Given an encoded string, return its decoded string. The encoding rule is: k[encoded_string], where the encoded_string inside the square brackets is being repeated exactly k times. Note that k is guaranteed to be a positive integer. You may assume that the input string is always valid; there are no extra white spaces, square brackets are well-formed, etc. Furthermore, you may assume that the original data does not contain any digits and that digits are only for those repeat numbers, k. For example, there will not be input like 3a or 2[4]. The test cases are generated so that the length of the output will never exceed 105.  ",decode-string,Decode String,"String, Stack, Recursion",14
"You are given an integer array coins representing coins of different denominations and an integer amount representing a total amount of money. Return the fewest number of coins that you need to make up that amount. If that amount of money cannot be made up by any combination of the coins, return -1. You may assume that you have an infinite number of each kind of coin.  ",coin-change,Coin Change,"Array, Dynamic Programming, Breadth-First Search",14
"You are given an array prices where prices[i] is the price of a given stock on the ith day. You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock. Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0.  ",best-time-to-buy-and-sell-stock,Best Time to Buy and Sell Stock,"Array, Dynamic Programming",14
"Given an input string (s) and a pattern (p), implement wildcard pattern matching with support for '?' and '*' where:  '?' Matches any single character. '*' Matches any sequence of characters (including the empty sequence).  The matching should cover the entire input string (not partial).  ",wildcard-matching,Wildcard Matching,"String, Dynamic Programming, Greedy, Recursion",14
"Given an array nums containing n distinct numbers in the range [0, n], return the only number in the range that is missing from the array.  ",missing-number,Missing Number,"Array, Hash Table, Math, Binary Search, Bit Manipulation, Sorting",13
"Given the root of a binary tree, return the zigzag level order traversal of its nodes' values. (i.e., from left to right, then right to left for the next level and alternate between).  ",binary-tree-zigzag-level-order-traversal,Binary Tree Zigzag Level Order Traversal,"Tree, Breadth-First Search, Binary Tree",13
"Given the head of a linked list, reverse the nodes of the list k at a time, and return the modified list. k is a positive integer and is less than or equal to the length of the linked list. If the number of nodes is not a multiple of k then left-out nodes, in the end, should remain as it is. You may not alter the values in the list's nodes, only nodes themselves may be changed.  ",reverse-nodes-in-k-group,Reverse Nodes in k-Group,"Linked List, Recursion",13
"Given n pairs of parentheses, write a function to generate all combinations of well-formed parentheses.  ",generate-parentheses,Generate Parentheses,"String, Dynamic Programming, Backtracking",13
You are given the heads of two sorted linked lists list1 and list2. Merge the two lists in a one sorted list. The list should be made by splicing together the nodes of the first two lists. Return the head of the merged linked list.  ,merge-two-sorted-lists,Merge Two Sorted Lists,"Linked List, Recursion",13
"You are given an m x n grid where each cell can have one of three values:  0 representing an empty cell, 1 representing a fresh orange, or 2 representing a rotten orange.  Every minute, any fresh orange that is 4-directionally adjacent to a rotten orange becomes rotten. Return the minimum number of minutes that must elapse until no cell has a fresh orange. If this is impossible, return -1.  ",rotting-oranges,Rotting Oranges,"Array, Breadth-First Search, Matrix",12
"Implement the RandomizedSet class:  RandomizedSet() Initializes the RandomizedSet object. bool insert(int val) Inserts an item val into the set if not present. Returns true if the item was not present, false otherwise. bool remove(int val) Removes an item val from the set if present. Returns true if the item was present, false otherwise. int getRandom() Returns a random element from the current set of elements (it's guaranteed that at least one element exists when this method is called). Each element must have the same probability of being returned.  You must implement the functions of the class such that each function works in average O(1) time complexity.  ",insert-delete-getrandom-o1,Insert Delete GetRandom O(1),"Array, Hash Table, Math, Design, Randomized",12
"Given an integer array nums and an integer k, return the k most frequent elements. You may return the answer in any order.  ",top-k-frequent-elements,Top K Frequent Elements,"Array, Hash Table, Divide and Conquer, Sorting, Heap (Priority Queue), Bucket Sort, Counting, Quickselect",12
"Given an integer array nums and an integer k, return the kth largest element in the array. Note that it is the kth largest element in the sorted order, not the kth distinct element. You must solve it in O(n) time complexity.  ",kth-largest-element-in-an-array,Kth Largest Element in an Array,"Array, Divide and Conquer, Sorting, Heap (Priority Queue), Quickselect",12
"A linked list of length n is given such that each node contains an additional random pointer, which could point to any node in the list, or null. Construct a deep copy of the list. The deep copy should consist of exactly n brand new nodes, where each new node has its value set to the value of its corresponding original node. Both the next and random pointer of the new nodes should point to new nodes in the copied list such that the pointers in the original list and copied list represent the same list state. None of the pointers in the new list should point to nodes in the original list. For example, if there are two nodes X and Y in the original list, where X.random --> Y, then for the corresponding two nodes x and y in the copied list, x.random --> y. Return the head of the copied linked list. The linked list is represented in the input/output as a list of n nodes. Each node is represented as a pair of [val, random_index] where:  val: an integer representing Node.val random_index: the index of the node (range from 0 to n-1) that the random pointer points to, or null if it does not point to any node.  Your code will only be given the head of the original linked list.  ",copy-list-with-random-pointer,Copy List with Random Pointer,"Hash Table, Linked List",12
"Given two non-negative integers num1 and num2 represented as strings, return the product of num1 and num2, also represented as a string. Note: You must not use any built-in BigInteger library or convert the inputs to integer directly.  ",multiply-strings,Multiply Strings,"Math, String, Simulation",12
"Given a binary tree root, a node X in the tree is named good if in the path from root to X there are no nodes with a value greater than X. Return the number of good nodes in the binary tree.  ",count-good-nodes-in-binary-tree,Count Good Nodes in Binary Tree,"Tree, Depth-First Search, Breadth-First Search, Binary Tree",11
"Design and implement a data structure for a Least Frequently Used (LFU) cache. Implement the LFUCache class:  LFUCache(int capacity) Initializes the object with the capacity of the data structure. int get(int key) Gets the value of the key if the key exists in the cache. Otherwise, returns -1. void put(int key, int value) Update the value of the key if present, or inserts the key if not already present. When the cache reaches its capacity, it should invalidate and remove the least frequently used key before inserting a new item. For this problem, when there is a tie (i.e., two or more keys with the same frequency), the least recently used key would be invalidated.  To determine the least frequently used key, a use counter is maintained for each key in the cache. The key with the smallest use counter is the least frequently used key. When a key is first inserted into the cache, its use counter is set to 1 (due to the put operation). The use counter for a key in the cache is incremented either a get or put operation is called on it. The functions get and put must each run in O(1) average time complexity.  ",lfu-cache,LFU Cache,"Hash Table, Linked List, Design, Doubly-Linked List",11
"Given two strings s and p, return an array of all the start indices of p's anagrams in s. You may return the answer in any order. An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.  ",find-all-anagrams-in-a-string,Find All Anagrams in a String,"Hash Table, String, Sliding Window",11
"Given an array of integers nums containing n + 1 integers where each integer is in the range [1, n] inclusive. There is only one repeated number in nums, return this repeated number. You must solve the problem without modifying the array nums and uses only constant extra space.  ",find-the-duplicate-number,Find the Duplicate Number,"Array, Two Pointers, Binary Search, Bit Manipulation",11
"Given a string s which represents an expression, evaluate this expression and return its value.  The integer division should truncate toward zero. You may assume that the given expression is always valid. All intermediate results will be in the range of [-231, 231 - 1]. Note: You are not allowed to use any built-in function which evaluates strings as mathematical expressions, such as eval().  ",basic-calculator-ii,Basic Calculator II,"Math, String, Stack",11
"Given an input string s and a pattern p, implement regular expression matching with support for '.' and '*' where:  '.' Matches any single character.​​​​ '*' Matches zero or more of the preceding element.  The matching should cover the entire input string (not partial).  ",regular-expression-matching,Regular Expression Matching,"String, Dynamic Programming, Recursion",11
"Tic-tac-toe is played by two players A and B on a 3 x 3 grid. The rules of Tic-Tac-Toe are:  Players take turns placing characters into empty squares ' '. The first player A always places 'X' characters, while the second player B always places 'O' characters. 'X' and 'O' characters are always placed into empty squares, never on filled ones. The game ends when there are three of the same (non-empty) character filling any row, column, or diagonal. The game also ends if all squares are non-empty. No more moves can be played if the game is over.  Given a 2D integer array moves where moves[i] = [rowi, coli] indicates that the ith move will be played on grid[rowi][coli]. return the winner of the game if it exists (A or B). In case the game ends in a draw return ""Draw"". If there are still movements to play return ""Pending"". You can assume that moves is valid (i.e., it follows the rules of Tic-Tac-Toe), the grid is initially empty, and A will play first.  ",find-winner-on-a-tic-tac-toe-game,Find Winner on a Tic Tac Toe Game,"Array, Hash Table, Matrix, Simulation",10
"You are given an m x n binary matrix grid. An island is a group of 1's (representing land) connected 4-directionally (horizontal or vertical.) You may assume all four edges of the grid are surrounded by water. The area of an island is the number of cells with a value 1 in the island. Return the maximum area of an island in grid. If there is no island, return 0.  ",max-area-of-island,Max Area of Island,"Array, Depth-First Search, Breadth-First Search, Union Find, Matrix",10
"Given an array of integers nums and an integer k, return the total number of subarrays whose sum equals to k. A subarray is a contiguous non-empty sequence of elements within an array.  ",subarray-sum-equals-k,Subarray Sum Equals K,"Array, Hash Table, Prefix Sum",10
"Given an integer array nums, move all 0's to the end of it while maintaining the relative order of the non-zero elements. Note that you must do this in-place without making a copy of the array.  ",move-zeroes,Move Zeroes,"Array, Two Pointers",10
"Given a binary tree, find the lowest common ancestor (LCA) of two given nodes in the tree. According to the definition of LCA on Wikipedia: “The lowest common ancestor is defined between two nodes p and q as the lowest node in T that has both p and q as descendants (where we allow a node to be a descendant of itself).”  ",lowest-common-ancestor-of-a-binary-tree,Lowest Common Ancestor of a Binary Tree,"Tree, Depth-First Search, Binary Tree",10
"Given the head of a singly linked list, return true if it is a palindrome or false otherwise.  ",palindrome-linked-list,Palindrome Linked List,"Linked List, Two Pointers, Stack, Recursion",10
"There are a total of numCourses courses you have to take, labeled from 0 to numCourses - 1. You are given an array prerequisites where prerequisites[i] = [ai, bi] indicates that you must take course bi first if you want to take course ai.  For example, the pair [0, 1], indicates that to take course 0 you have to first take course 1.  Return the ordering of courses you should take to finish all courses. If there are many valid answers, return any of them. If it is impossible to finish all courses, return an empty array.  ",course-schedule-ii,Course Schedule II,"Depth-First Search, Breadth-First Search, Graph, Topological Sort",10
"There are a total of numCourses courses you have to take, labeled from 0 to numCourses - 1. You are given an array prerequisites where prerequisites[i] = [ai, bi] indicates that you must take course bi first if you want to take course ai.  For example, the pair [0, 1], indicates that to take course 0 you have to first take course 1.  Return true if you can finish all courses. Otherwise, return false.  ",course-schedule,Course Schedule,"Depth-First Search, Breadth-First Search, Graph, Topological Sort",10
"Given the head of a singly linked list, reverse the list, and return the reversed list.  ",reverse-linked-list,Reverse Linked List,"Linked List, Recursion",10
"Design a stack that supports push, pop, top, and retrieving the minimum element in constant time. Implement the MinStack class:  MinStack() initializes the stack object. void push(int val) pushes the element val onto the stack. void pop() removes the element on the top of the stack. int top() gets the top element of the stack. int getMin() retrieves the minimum element in the stack.  You must implement a solution with O(1) time complexity for each function.  ",min-stack,Min Stack,"Stack, Design",10
"You are given two integer arrays nums1 and nums2, sorted in non-decreasing order, and two integers m and n, representing the number of elements in nums1 and nums2 respectively. Merge nums1 and nums2 into a single array sorted in non-decreasing order. The final sorted array should not be returned by the function, but instead be stored inside the array nums1. To accommodate this, nums1 has a length of m + n, where the first m elements denote the elements that should be merged, and the last n elements are set to 0 and should be ignored. nums2 has a length of n.  ",merge-sorted-array,Merge Sorted Array,"Array, Two Pointers, Sorting",10
"Given two non-negative integers, num1 and num2 represented as string, return the sum of num1 and num2 as a string. You must solve the problem without using any built-in library for handling large integers (such as BigInteger). You must also not convert the inputs to integers directly.  ",add-strings,Add Strings,"Math, String, Simulation",9
"Implement the BSTIterator class that represents an iterator over the in-order traversal of a binary search tree (BST):  BSTIterator(TreeNode root) Initializes an object of the BSTIterator class. The root of the BST is given as part of the constructor. The pointer should be initialized to a non-existent number smaller than any element in the BST. boolean hasNext() Returns true if there exists a number in the traversal to the right of the pointer, otherwise returns false. int next() Moves the pointer to the right, then returns the number at the pointer.  Notice that by initializing the pointer to a non-existent smallest number, the first call to next() will return the smallest element in the BST. You may assume that next() calls will always be valid. That is, there will be at least a next number in the in-order traversal when next() is called.  ",binary-search-tree-iterator,Binary Search Tree Iterator,"Stack, Tree, Design, Binary Search Tree, Binary Tree, Iterator",9
"There is a robot on an m x n grid. The robot is initially located at the top-left corner (i.e., grid[0][0]). The robot tries to move to the bottom-right corner (i.e., grid[m - 1][n - 1]). The robot can only move either down or right at any point in time. Given the two integers m and n, return the number of possible unique paths that the robot can take to reach the bottom-right corner. The test cases are generated so that the answer will be less than or equal to 2 * 109.  ",unique-paths,Unique Paths,"Math, Dynamic Programming, Combinatorics",9
"You are given an n x n 2D matrix representing an image, rotate the image by 90 degrees (clockwise). You have to rotate the image in-place, which means you have to modify the input 2D matrix directly. DO NOT allocate another 2D matrix and do the rotation.  ",rotate-image,Rotate Image,"Array, Math, Matrix",9
"Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it can trap after raining.  ",trapping-rain-water,Trapping Rain Water,"Array, Two Pointers, Dynamic Programming, Stack, Monotonic Stack",9
"You are given an integer array height of length n. There are n vertical lines drawn such that the two endpoints of the ith line are (i, 0) and (i, height[i]). Find two lines that together with the x-axis form a container, such that the container contains the most water. Return the maximum amount of water a container can store. Notice that you may not slant the container.  ",container-with-most-water,Container With Most Water,"Array, Two Pointers, Greedy",9
"Given an n x n binary matrix grid, return the length of the shortest clear path in the matrix. If there is no clear path, return -1. A clear path in a binary matrix is a path from the top-left cell (i.e., (0, 0)) to the bottom-right cell (i.e., (n - 1, n - 1)) such that:  All the visited cells of the path are 0. All the adjacent cells of the path are 8-directionally connected (i.e., they are different and they share an edge or a corner).  The length of a clear path is the number of visited cells of this path.  ",shortest-path-in-binary-matrix,Shortest Path in Binary Matrix,"Array, Breadth-First Search, Matrix",8
"Given an array of strings words and an integer k, return the k most frequent strings. Return the answer sorted by the frequency from highest to lowest. Sort the words with the same frequency by their lexicographical order.  ",top-k-frequent-words,Top K Frequent Words,"Hash Table, String, Trie, Sorting, Heap (Priority Queue), Bucket Sort, Counting",8
"Given the heads of two singly linked-lists headA and headB, return the node at which the two lists intersect. If the two linked lists have no intersection at all, return null. For example, the following two linked lists begin to intersect at node c1:  The test cases are generated such that there are no cycles anywhere in the entire linked structure. Note that the linked lists must retain their original structure after the function returns. Custom Judge: The inputs to the judge are given as follows (your program is not given these inputs):  intersectVal - The value of the node where the intersection occurs. This is 0 if there is no intersected node. listA - The first linked list. listB - The second linked list. skipA - The number of nodes to skip ahead in listA (starting from the head) to get to the intersected node. skipB - The number of nodes to skip ahead in listB (starting from the head) to get to the intersected node.  The judge will then create the linked structure based on these inputs and pass the two heads, headA and headB to your program. If you correctly return the intersected node, then your solution will be accepted.  ",intersection-of-two-linked-lists,Intersection of Two Linked Lists,"Hash Table, Linked List, Two Pointers",8
"Given an unsorted array of integers nums, return the length of the longest consecutive elements sequence. You must write an algorithm that runs in O(n) time.  ",longest-consecutive-sequence,Longest Consecutive Sequence,"Array, Hash Table, Union Find",8
"A phrase is a palindrome if, after converting all uppercase letters into lowercase letters and removing all non-alphanumeric characters, it reads the same forward and backward. Alphanumeric characters include letters and numbers. Given a string s, return true if it is a palindrome, or false otherwise.  ",valid-palindrome,Valid Palindrome,"Two Pointers, String",8
"Given an array nums with n objects colored red, white, or blue, sort them in-place so that objects of the same color are adjacent, with the colors in the order red, white, and blue. We will use the integers 0, 1, and 2 to represent the color red, white, and blue, respectively. You must solve this problem without using the library's sort function.  ",sort-colors,Sort Colors,"Array, Two Pointers, Sorting",8
"Given an m x n integer matrix matrix, if an element is 0, set its entire row and column to 0's. You must do it in place.  ",set-matrix-zeroes,Set Matrix Zeroes,"Array, Hash Table, Matrix",8
Determine if a 9 x 9 Sudoku board is valid. Only the filled cells need to be validated according to the following rules:  Each row must contain the digits 1-9 without repetition. Each column must contain the digits 1-9 without repetition. Each of the nine 3 x 3 sub-boxes of the grid must contain the digits 1-9 without repetition.  Note:  A Sudoku board (partially filled) could be valid but is not necessarily solvable. Only the filled cells need to be validated according to the mentioned rules.   ,valid-sudoku,Valid Sudoku,"Array, Hash Table, Matrix",8
Convert a non-negative integer num to its English words representation.  ,integer-to-english-words,Integer to English Words,"Math, String, Recursion",7
"Given an m x n binary matrix filled with 0's and 1's, find the largest square containing only 1's and return its area.  ",maximal-square,Maximal Square,"Array, Dynamic Programming, Matrix",7
"Given an m x n board of characters and a list of strings words, return all words on the board. Each word must be constructed from letters of sequentially adjacent cells, where adjacent cells are horizontally or vertically neighboring. The same letter cell may not be used more than once in a word.  ",word-search-ii,Word Search II,"Array, String, Backtracking, Trie, Matrix",7
"Given an integer array nums, rotate the array to the right by k steps, where k is non-negative.  ",rotate-array,Rotate Array,"Array, Math, Two Pointers",7
"Suppose an array of length n sorted in ascending order is rotated between 1 and n times. For example, the array nums = [0,1,2,4,5,6,7] might become:  [4,5,6,7,0,1,2] if it was rotated 4 times. [0,1,2,4,5,6,7] if it was rotated 7 times.  Notice that rotating an array [a[0], a[1], a[2], ..., a[n-1]] 1 time results in the array [a[n-1], a[0], a[1], a[2], ..., a[n-2]]. Given the sorted rotated array nums of unique elements, return the minimum element of this array. You must write an algorithm that runs in O(log n) time.  ",find-minimum-in-rotated-sorted-array,Find Minimum in Rotated Sorted Array,"Array, Binary Search",7
"There are n gas stations along a circular route, where the amount of gas at the ith station is gas[i]. You have a car with an unlimited gas tank and it costs cost[i] of gas to travel from the ith station to its next (i + 1)th station. You begin the journey with an empty tank at one of the gas stations. Given two integer arrays gas and cost, return the starting gas station's index if you can travel around the circuit once in the clockwise direction, otherwise return -1. If there exists a solution, it is guaranteed to be unique  ",gas-station,Gas Station,"Array, Greedy",7
"A path in a binary tree is a sequence of nodes where each pair of adjacent nodes in the sequence has an edge connecting them. A node can only appear in the sequence at most once. Note that the path does not need to pass through the root. The path sum of a path is the sum of the node's values in the path. Given the root of a binary tree, return the maximum path sum of any non-empty path.  ",binary-tree-maximum-path-sum,Binary Tree Maximum Path Sum,"Dynamic Programming, Tree, Depth-First Search, Binary Tree",7
"Given the root of a binary tree and an integer targetSum, return true if the tree has a root-to-leaf path such that adding up all the values along the path equals targetSum. A leaf is a node with no children.  ",path-sum,Path Sum,"Tree, Depth-First Search, Breadth-First Search, Binary Tree",7
"Given the root of a binary tree, return the level order traversal of its nodes' values. (i.e., from left to right, level by level).  ",binary-tree-level-order-traversal,Binary Tree Level Order Traversal,"Tree, Breadth-First Search, Binary Tree",7
"Given two strings s and t of lengths m and n respectively, return the minimum window substring of s such that every character in t (including duplicates) is included in the window. If there is no such substring, return the empty string """". The testcases will be generated such that the answer is unique.  ",minimum-window-substring,Minimum Window Substring,"Hash Table, String, Sliding Window",7
"You are given an m x n integer matrix matrix with the following two properties:  Each row is sorted in non-decreasing order. The first integer of each row is greater than the last integer of the previous row.  Given an integer target, return true if target is in matrix or false otherwise. You must write a solution in O(log(m * n)) time complexity.  ",search-a-2d-matrix,Search a 2D Matrix,"Array, Binary Search, Matrix",7
You are climbing a staircase. It takes n steps to reach the top. Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?  ,climbing-stairs,Climbing Stairs,"Math, Dynamic Programming, Memoization",7
"Given a linked list, swap every two adjacent nodes and return its head. You must solve the problem without modifying the values in the list's nodes (i.e., only nodes themselves may be changed.)  ",swap-nodes-in-pairs,Swap Nodes in Pairs,"Linked List, Recursion",7
"You are given a map of a server center, represented as a m * n integer matrix grid, where 1 means that on that cell there is a server and 0 means that it is no server. Two servers are said to communicate if they are on the same row or on the same column.  Return the number of servers that communicate with any other server.  ",count-servers-that-communicate,Count Servers that Communicate,"Array, Depth-First Search, Breadth-First Search, Union Find, Matrix, Counting",6
"Given the root of a binary tree, calculate the vertical order traversal of the binary tree. For each node at position (row, col), its left and right children will be at positions (row + 1, col - 1) and (row + 1, col + 1) respectively. The root of the tree is at (0, 0). The vertical order traversal of a binary tree is a list of top-to-bottom orderings for each column index starting from the leftmost column and ending on the rightmost column. There may be multiple nodes in the same row and same column. In such a case, sort these nodes by their values. Return the vertical order traversal of the binary tree.  ",vertical-order-traversal-of-a-binary-tree,Vertical Order Traversal of a Binary Tree,"Hash Table, Tree, Depth-First Search, Breadth-First Search, Binary Tree",6
"Given an array of points where points[i] = [xi, yi] represents a point on the X-Y plane and an integer k, return the k closest points to the origin (0, 0). The distance between two points on the X-Y plane is the Euclidean distance (i.e., √(x1 - x2)2 + (y1 - y2)2). You may return the answer in any order. The answer is guaranteed to be unique (except for the order that it is in).  ",k-closest-points-to-origin,K Closest Points to Origin,"Array, Math, Divide and Conquer, Geometry, Sorting, Heap (Priority Queue), Quickselect",6
"Design a HashMap without using any built-in hash table libraries. Implement the MyHashMap class:  MyHashMap() initializes the object with an empty map. void put(int key, int value) inserts a (key, value) pair into the HashMap. If the key already exists in the map, update the corresponding value. int get(int key) returns the value to which the specified key is mapped, or -1 if this map contains no mapping for the key. void remove(key) removes the key and its corresponding value if the map contains the mapping for the key.   ",design-hashmap,Design HashMap,"Array, Hash Table, Linked List, Design, Hash Function",6
"Given an m x n matrix mat, return an array of all the elements of the array in a diagonal order.  ",diagonal-traverse,Diagonal Traverse,"Array, Matrix, Simulation",6
"Given a root node reference of a BST and a key, delete the node with the given key in the BST. Return the root node reference (possibly updated) of the BST. Basically, the deletion can be divided into two stages:  Search for a node to remove. If the node is found, delete the node.   ",delete-node-in-a-bst,Delete Node in a BST,"Tree, Binary Search Tree, Binary Tree",6
"Given an array of characters chars, compress it using the following algorithm: Begin with an empty string s. For each group of consecutive repeating characters in chars:  If the group's length is 1, append the character to s. Otherwise, append the character followed by the group's length.  The compressed string s should not be returned separately, but instead, be stored in the input character array chars. Note that group lengths that are 10 or longer will be split into multiple characters in chars. After you are done modifying the input array, return the new length of the array. You must write an algorithm that uses only constant extra space.  ",string-compression,String Compression,"Two Pointers, String",6
"Given a string s, find the first non-repeating character in it and return its index. If it does not exist, return -1.  ",first-unique-character-in-a-string,First Unique Character in a String,"Hash Table, String, Queue, Counting",6
"You are given n balloons, indexed from 0 to n - 1. Each balloon is painted with a number on it represented by an array nums. You are asked to burst all the balloons. If you burst the ith balloon, you will get nums[i - 1] * nums[i] * nums[i + 1] coins. If i - 1 or i + 1 goes out of bounds of the array, then treat it as if there is a balloon with a 1 painted on it. Return the maximum coins you can collect by bursting the balloons wisely.  ",burst-balloons,Burst Balloons,"Array, Dynamic Programming",6
"You are a product manager and currently leading a team to develop a new product. Unfortunately, the latest version of your product fails the quality check. Since each version is developed based on the previous version, all the versions after a bad version are also bad. Suppose you have n versions [1, 2, ..., n] and you want to find out the first bad one, which causes all the following ones to be bad. You are given an API bool isBadVersion(version) which returns whether version is bad. Implement a function to find the first bad version. You should minimize the number of calls to the API.  ",first-bad-version,First Bad Version,"Binary Search, Interactive",6
"Given two strings s and t, return true if t is an anagram of s, and false otherwise. An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.  ",valid-anagram,Valid Anagram,"Hash Table, String, Sorting",6
"You are given an array of integers nums, there is a sliding window of size k which is moving from the very left of the array to the very right. You can only see the k numbers in the window. Each time the sliding window moves right by one position. Return the max sliding window.  ",sliding-window-maximum,Sliding Window Maximum,"Array, Queue, Sliding Window, Heap (Priority Queue), Monotonic Queue",6
"Given a string columnTitle that represents the column title as appears in an Excel sheet, return its corresponding column number. For example:  A -> 1 B -> 2 C -> 3 ... Z -> 26 AA -> 27 AB -> 28  ...   ",excel-sheet-column-number,Excel Sheet Column Number,"Math, String",6
"Given an array nums of size n, return the majority element. The majority element is the element that appears more than ⌊n / 2⌋ times. You may assume that the majority element always exists in the array.  ",majority-element,Majority Element,"Array, Hash Table, Divide and Conquer, Sorting, Counting",6
"A transformation sequence from word beginWord to word endWord using a dictionary wordList is a sequence of words beginWord -> s1 -> s2 -> ... -> sk such that:  Every adjacent pair of words differs by a single letter. Every si for 1 <= i <= k is in wordList. Note that beginWord does not need to be in wordList. sk == endWord  Given two words, beginWord and endWord, and a dictionary wordList, return the number of words in the shortest transformation sequence from beginWord to endWord, or 0 if no such sequence exists.  ",word-ladder,Word Ladder,"Hash Table, String, Breadth-First Search",6
"Given the root of a binary tree, flatten the tree into a ""linked list"":  The ""linked list"" should use the same TreeNode class where the right child pointer points to the next node in the list and the left child pointer is always null. The ""linked list"" should be in the same order as a pre-order traversal of the binary tree.   ",flatten-binary-tree-to-linked-list,Flatten Binary Tree to Linked List,"Linked List, Stack, Tree, Depth-First Search, Binary Tree",6
"Given the root of a binary tree, determine if it is a valid binary search tree (BST). A valid BST is defined as follows:  The left subtree of a node contains only nodes with keys less than the node's key. The right subtree of a node contains only nodes with keys greater than the node's key. Both the left and right subtrees must also be binary search trees.   ",validate-binary-search-tree,Validate Binary Search Tree,"Tree, Depth-First Search, Binary Search Tree, Binary Tree",6
"Given an array of integers heights representing the histogram's bar height where the width of each bar is 1, return the area of the largest rectangle in the histogram.  ",largest-rectangle-in-histogram,Largest Rectangle in Histogram,"Array, Stack, Monotonic Stack",6
"Given two strings word1 and word2, return the minimum number of operations required to convert word1 to word2. You have the following three operations permitted on a word:  Insert a character Delete a character Replace a character   ",edit-distance,Edit Distance,"String, Dynamic Programming",6
"Given an array of distinct integers candidates and a target integer target, return a list of all unique combinations of candidates where the chosen numbers sum to target. You may return the combinations in any order. The same number may be chosen from candidates an unlimited number of times. Two combinations are unique if the frequency of at least one of the chosen numbers is different. The test cases are generated such that the number of unique combinations that sum up to target is less than 150 combinations for the given input.  ",combination-sum,Combination Sum,"Array, Backtracking",6
"Given an integer array nums sorted in non-decreasing order, remove the duplicates in-place such that each unique element appears only once. The relative order of the elements should be kept the same. Then return the number of unique elements in nums. Consider the number of unique elements of nums be k, to get accepted, you need to do the following things:  Change the array nums such that the first k elements of nums contain the unique elements in the order they were present in nums initially. The remaining elements of nums are not important as well as the size of nums. Return k.  Custom Judge: The judge will test your solution with the following code:  int[] nums = [...]; // Input array int[] expectedNums = [...]; // The expected answer with correct length  int k = removeDuplicates(nums); // Calls your implementation  assert k == expectedNums.length; for (int i = 0; i < k; i++) {     assert nums[i] == expectedNums[i]; }  If all assertions pass, then your solution will be accepted.  ",remove-duplicates-from-sorted-array,Remove Duplicates from Sorted Array,"Array, Two Pointers",6
"Given the head of a linked list, remove the nth node from the end of the list and return its head.  ",remove-nth-node-from-end-of-list,Remove Nth Node From End of List,"Linked List, Two Pointers",6
"Given two numbers, hour and minutes, return the smaller angle (in degrees) formed between the hour and the minute hand. Answers within 10-5 of the actual value will be accepted as correct.  ",angle-between-hands-of-a-clock,Angle Between Hands of a Clock,Math,5
"Design a time-based key-value data structure that can store multiple values for the same key at different time stamps and retrieve the key's value at a certain timestamp. Implement the TimeMap class:  TimeMap() Initializes the object of the data structure. void set(String key, String value, int timestamp) Stores the key key with the value value at the given time timestamp. String get(String key, int timestamp) Returns a value such that set was called previously, with timestamp_prev <= timestamp. If there are multiple such values, it returns the value associated with the largest timestamp_prev. If there are no values, it returns """".   ",time-based-key-value-store,Time Based Key-Value Store,"Hash Table, String, Binary Search, Design",5
"Given an integer array nums sorted in non-decreasing order, return an array of the squares of each number sorted in non-decreasing order.  ",squares-of-a-sorted-array,Squares of a Sorted Array,"Array, Two Pointers, Sorting",5
"You are given an array representing a row of seats where seats[i] = 1 represents a person sitting in the ith seat, and seats[i] = 0 represents that the ith seat is empty (0-indexed). There is at least one empty seat, and at least one person sitting. Alex wants to sit in the seat such that the distance between him and the closest person to him is maximized.  Return that maximum distance to the closest person.  ",maximize-distance-to-closest-person,Maximize Distance to Closest Person,Array,5
"Given an array of integers temperatures represents the daily temperatures, return an array answer such that answer[i] is the number of days you have to wait after the ith day to get a warmer temperature. If there is no future day for which this is possible, keep answer[i] == 0 instead.  ",daily-temperatures,Daily Temperatures,"Array, Stack, Monotonic Stack",5
"Given two strings s1 and s2, return true if s2 contains a permutation of s1, or false otherwise. In other words, return true if one of s1's permutations is the substring of s2.  ",permutation-in-string,Permutation in String,"Hash Table, Two Pointers, String, Sliding Window",5
"Given a string s, reverse the order of characters in each word within a sentence while still preserving whitespace and initial word order.  ",reverse-words-in-a-string-iii,Reverse Words in a String III,"Two Pointers, String",5
"You are given a sorted array consisting of only integers where every element appears exactly twice, except for one element which appears exactly once. Return the single element that appears only once. Your solution must run in O(log n) time and O(1) space.  ",single-element-in-a-sorted-array,Single Element in a Sorted Array,"Array, Binary Search",5
Note: This is a companion problem to the System Design problem: Design TinyURL. TinyURL is a URL shortening service where you enter a URL such as https://leetcode.com/problems/design-tinyurl and it returns a short URL such as http://tinyurl.com/4e9iAk. Design a class to encode a URL and decode a tiny URL. There is no restriction on how your encode/decode algorithm should work. You just need to ensure that a URL can be encoded to a tiny URL and the tiny URL can be decoded to the original URL. Implement the Solution class:  Solution() Initializes the object of the system. String encode(String longUrl) Returns a tiny URL for the given longUrl. String decode(String shortUrl) Returns the original long URL for the given shortUrl. It is guaranteed that the given shortUrl was encoded by the same object.   ,encode-and-decode-tinyurl,Encode and Decode TinyURL,"Hash Table, String, Design, Hash Function",5
"Given an integer array nums of size n, return the minimum number of moves required to make all array elements equal. In one move, you can increment or decrement an element of the array by 1. Test cases are designed so that the answer will fit in a 32-bit integer.  ",minimum-moves-to-equal-array-elements-ii,Minimum Moves to Equal Array Elements II,"Array, Math, Sorting",5
"Given a string s, sort it in decreasing order based on the frequency of the characters. The frequency of a character is the number of times it appears in the string. Return the sorted string. If there are multiple answers, return any of them.  ",sort-characters-by-frequency,Sort Characters By Frequency,"Hash Table, String, Sorting, Heap (Priority Queue), Bucket Sort, Counting",5
"Given an integer array nums, return true if you can partition the array into two subsets such that the sum of the elements in both subsets is equal or false otherwise.  ",partition-equal-subset-sum,Partition Equal Subset Sum,"Array, Dynamic Programming",5
Write a function that reverses a string. The input string is given as an array of characters s. You must do this by modifying the input array in-place with O(1) extra memory.  ,reverse-string,Reverse String,"Two Pointers, String",5
"Given an integer array nums, return an integer array counts where counts[i] is the number of smaller elements to the right of nums[i].  ",count-of-smaller-numbers-after-self,Count of Smaller Numbers After Self,"Array, Binary Search, Divide and Conquer, Binary Indexed Tree, Segment Tree, Merge Sort, Ordered Set",5
Write an efficient algorithm that searches for a value target in an m x n integer matrix matrix. This matrix has the following properties:  Integers in each row are sorted in ascending from left to right. Integers in each column are sorted in ascending from top to bottom.   ,search-a-2d-matrix-ii,Search a 2D Matrix II,"Array, Binary Search, Divide and Conquer, Matrix",5
"Given a string s representing a valid expression, implement a basic calculator to evaluate it, and return the result of the evaluation. Note: You are not allowed to use any built-in function which evaluates strings as mathematical expressions, such as eval().  ",basic-calculator,Basic Calculator,"Math, String, Stack, Recursion",5
"A trie (pronounced as ""try"") or prefix tree is a tree data structure used to efficiently store and retrieve keys in a dataset of strings. There are various applications of this data structure, such as autocomplete and spellchecker. Implement the Trie class:  Trie() Initializes the trie object. void insert(String word) Inserts the string word into the trie. boolean search(String word) Returns true if the string word is in the trie (i.e., was inserted before), and false otherwise. boolean startsWith(String prefix) Returns true if there is a previously inserted string word that has the prefix prefix, and false otherwise.   ",implement-trie-prefix-tree,Implement Trie (Prefix Tree),"Hash Table, String, Design, Trie",5
"You are a professional robber planning to rob houses along a street. Each house has a certain amount of money stashed, the only constraint stopping you from robbing each of them is that adjacent houses have security systems connected and it will automatically contact the police if two adjacent houses were broken into on the same night. Given an integer array nums representing the amount of money of each house, return the maximum amount of money you can rob tonight without alerting the police.  ",house-robber,House Robber,"Array, Dynamic Programming",5
"Given a string s and a dictionary of strings wordDict, return true if s can be segmented into a space-separated sequence of one or more dictionary words. Note that the same word in the dictionary may be reused multiple times in the segmentation.  ",word-break,Word Break,"Array, Hash Table, String, Dynamic Programming, Trie, Memoization",5
"Given a non-empty array of integers nums, every element appears twice except for one. Find that single one. You must implement a solution with a linear runtime complexity and use only constant extra space.  ",single-number,Single Number,"Array, Bit Manipulation",5
"Given the root of a binary tree, check whether it is a mirror of itself (i.e., symmetric around its center).  ",symmetric-tree,Symmetric Tree,"Tree, Depth-First Search, Breadth-First Search, Binary Tree",5
"Given the head of a singly linked list and two integers left and right where left <= right, reverse the nodes of the list from position left to position right, and return the reversed list.  ",reverse-linked-list-ii,Reverse Linked List II,Linked List,5
"Given a m x n grid filled with non-negative numbers, find a path from top left to bottom right, which minimizes the sum of all numbers along its path. Note: You can only move either down or right at any point in time.  ",minimum-path-sum,Minimum Path Sum,"Array, Dynamic Programming, Matrix",5
"Implement pow(x, n), which calculates x raised to the power n (i.e., xn).  ",powx-n,"Pow(x, n)","Math, Recursion",5
"Given an array nums of distinct integers, return all the possible permutations. You can return the answer in any order.  ",permutations,Permutations,"Array, Backtracking",5
Write a program to solve a Sudoku puzzle by filling the empty cells. A sudoku solution must satisfy all of the following rules:  Each of the digits 1-9 must occur exactly once in each row. Each of the digits 1-9 must occur exactly once in each column. Each of the digits 1-9 must occur exactly once in each of the 9 3x3 sub-boxes of the grid.  The '.' character indicates empty cells.  ,sudoku-solver,Sudoku Solver,"Array, Hash Table, Backtracking, Matrix",5
"Write a function to find the longest common prefix string amongst an array of strings. If there is no common prefix, return an empty string """".  ",longest-common-prefix,Longest Common Prefix,"String, Trie",5
"Roman numerals are represented by seven different symbols: I, V, X, L, C, D and M.  Symbol       Value I             1 V             5 X             10 L             50 C             100 D             500 M             1000 For example, 2 is written as II in Roman numeral, just two one's added together. 12 is written as XII, which is simply X + II. The number 27 is written as XXVII, which is XX + V + II. Roman numerals are usually written largest to smallest from left to right. However, the numeral for four is not IIII. Instead, the number four is written as IV. Because the one is before the five we subtract it making four. The same principle applies to the number nine, which is written as IX. There are six instances where subtraction is used:  I can be placed before V (5) and X (10) to make 4 and 9.  X can be placed before L (50) and C (100) to make 40 and 90.  C can be placed before D (500) and M (1000) to make 400 and 900.  Given an integer, convert it to a roman numeral.  ",integer-to-roman,Integer to Roman,"Hash Table, Math, String",5
"A string s is nice if, for every letter of the alphabet that s contains, it appears both in uppercase and lowercase. For example, ""abABB"" is nice because 'A' and 'a' appear, and 'B' and 'b' appear. However, ""abA"" is not because 'b' appears, but 'B' does not. Given a string s, return the longest substring of s that is nice. If there are multiple, return the substring of the earliest occurrence. If there are none, return an empty string.  ",longest-nice-substring,Longest Nice Substring,"Hash Table, String, Divide and Conquer, Bit Manipulation, Sliding Window",4
"Given a parentheses string s containing only the characters '(' and ')'. A parentheses string is balanced if:  Any left parenthesis '(' must have a corresponding two consecutive right parenthesis '))'. Left parenthesis '(' must go before the corresponding two consecutive right parenthesis '))'.  In other words, we treat '(' as an opening parenthesis and '))' as a closing parenthesis.  For example, ""())"", ""())(())))"" and ""(())())))"" are balanced, "")()"", ""()))"" and ""(()))"" are not balanced.  You can insert the characters '(' and ')' at any position of the string to balance it if needed. Return the minimum number of insertions needed to make s balanced.  ",minimum-insertions-to-balance-a-parentheses-string,Minimum Insertions to Balance a Parentheses String,"String, Stack, Greedy",4
"Given a string s of '(' , ')' and lowercase English characters. Your task is to remove the minimum number of parentheses ( '(' or ')', in any positions ) so that the resulting parentheses string is valid and return any valid string. Formally, a parentheses string is valid if and only if:  It is the empty string, contains only lowercase characters, or It can be written as AB (A concatenated with B), where A and B are valid strings, or It can be written as (A), where A is a valid string.   ",minimum-remove-to-make-valid-parentheses,Minimum Remove to Make Valid Parentheses,"String, Stack",4
"You are given the root of a binary tree with n nodes where each node in the tree has node.val coins. There are n coins in total throughout the whole tree. In one move, we may choose two adjacent nodes and move one coin from one node to another. A move may be from parent to child, or from child to parent. Return the minimum number of moves required to make every node have exactly one coin.  ",distribute-coins-in-binary-tree,Distribute Coins in Binary Tree,"Tree, Depth-First Search, Binary Tree",4
"We are given an array asteroids of integers representing asteroids in a row. For each asteroid, the absolute value represents its size, and the sign represents its direction (positive meaning right, negative meaning left). Each asteroid moves at the same speed. Find out the state of the asteroids after all collisions. If two asteroids meet, the smaller one will explode. If both are the same size, both will explode. Two asteroids moving in the same direction will never meet.  ",asteroid-collision,Asteroid Collision,"Array, Stack",4
"Given an array of integers nums which is sorted in ascending order, and an integer target, write a function to search target in nums. If target exists, then return its index. Otherwise, return -1. You must write an algorithm with O(log n) runtime complexity.  ",binary-search,Binary Search,"Array, Binary Search",4
"Design your implementation of the circular queue. The circular queue is a linear data structure in which the operations are performed based on FIFO (First In First Out) principle, and the last position is connected back to the first position to make a circle. It is also called ""Ring Buffer"". One of the benefits of the circular queue is that we can make use of the spaces in front of the queue. In a normal queue, once the queue becomes full, we cannot insert the next element even if there is a space in front of the queue. But using the circular queue, we can use the space to store new values. Implement the MyCircularQueue class:  MyCircularQueue(k) Initializes the object with the size of the queue to be k. int Front() Gets the front item from the queue. If the queue is empty, return -1. int Rear() Gets the last item from the queue. If the queue is empty, return -1. boolean enQueue(int value) Inserts an element into the circular queue. Return true if the operation is successful. boolean deQueue() Deletes an element from the circular queue. Return true if the operation is successful. boolean isEmpty() Checks whether the circular queue is empty or not. boolean isFull() Checks whether the circular queue is full or not.  You must solve the problem without using the built-in queue data structure in your programming language.   ",design-circular-queue,Design Circular Queue,"Array, Linked List, Design, Queue",4
"The Fibonacci numbers, commonly denoted F(n) form a sequence, called the Fibonacci sequence, such that each number is the sum of the two preceding ones, starting from 0 and 1. That is,  F(0) = 0, F(1) = 1 F(n) = F(n - 1) + F(n - 2), for n > 1.  Given n, calculate F(n).  ",fibonacci-number,Fibonacci Number,"Math, Dynamic Programming, Recursion, Memoization",4
"You are given two non-empty linked lists representing two non-negative integers. The most significant digit comes first and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list. You may assume the two numbers do not contain any leading zero, except the number 0 itself.  ",add-two-numbers-ii,Add Two Numbers II,"Linked List, Math, Stack",4
"Given an integer array nums of length n where all the integers of nums are in the range [1, n] and each integer appears once or twice, return an array of all the integers that appears twice. You must write an algorithm that runs in O(n) time and uses only constant extra space.  ",find-all-duplicates-in-an-array,Find All Duplicates in an Array,"Array, Hash Table",4
"Given an m x n matrix board where each cell is a battleship 'X' or empty '.', return the number of the battleships on board. Battleships can only be placed horizontally or vertically on board. In other words, they can only be made of the shape 1 x k (1 row, k columns) or k x 1 (k rows, 1 column), where k can be of any size. At least one horizontal or vertical cell separates between two battleships (i.e., there are no adjacent battleships).  ",battleships-in-a-board,Battleships in a Board,"Array, Depth-First Search, Matrix",4
"Given an n x n matrix where each of the rows and columns is sorted in ascending order, return the kth smallest element in the matrix. Note that it is the kth smallest element in the sorted order, not the kth distinct element. You must find a solution with a memory complexity better than O(n2).  ",kth-smallest-element-in-a-sorted-matrix,Kth Smallest Element in a Sorted Matrix,"Array, Binary Search, Sorting, Heap (Priority Queue), Matrix",4
"Given an integer n, count the total number of digit 1 appearing in all non-negative integers less than or equal to n.  ",number-of-digit-one,Number of Digit One,"Math, Dynamic Programming, Recursion",4
"A city's skyline is the outer contour of the silhouette formed by all the buildings in that city when viewed from a distance. Given the locations and heights of all the buildings, return the skyline formed by these buildings collectively. The geometric information of each building is given in the array buildings where buildings[i] = [lefti, righti, heighti]:  lefti is the x coordinate of the left edge of the ith building. righti is the x coordinate of the right edge of the ith building. heighti is the height of the ith building.  You may assume all buildings are perfect rectangles grounded on an absolutely flat surface at height 0. The skyline should be represented as a list of ""key points"" sorted by their x-coordinate in the form [[x1,y1],[x2,y2],...]. Each key point is the left endpoint of some horizontal segment in the skyline except the last point in the list, which always has a y-coordinate 0 and is used to mark the skyline's termination where the rightmost building ends. Any ground between the leftmost and rightmost buildings should be part of the skyline's contour. Note: There must be no consecutive horizontal lines of equal height in the output skyline. For instance, [...,[2 3],[4 5],[7 5],[11 5],[12 7],...] is not acceptable; the three lines of height 5 should be merged into one in the final output as such: [...,[2 3],[4 5],[12 7],...]  ",the-skyline-problem,The Skyline Problem,"Array, Divide and Conquer, Binary Indexed Tree, Segment Tree, Line Sweep, Heap (Priority Queue), Ordered Set",4
"Given an array of positive integers nums and a positive integer target, return the minimal length of a subarray whose sum is greater than or equal to target. If there is no such subarray, return 0 instead.  ",minimum-size-subarray-sum,Minimum Size Subarray Sum,"Array, Binary Search, Sliding Window, Prefix Sum",4
"Given an integer n, return the number of prime numbers that are strictly less than n.  ",count-primes,Count Primes,"Array, Math, Enumeration, Number Theory",4
"Given a list of non-negative integers nums, arrange them such that they form the largest number and return it. Since the result may be very large, so you need to return a string instead of an integer.  ",largest-number,Largest Number,"Array, String, Greedy, Sorting",4
"Given an integer columnNumber, return its corresponding column title as it appears in an Excel sheet. For example:  A -> 1 B -> 2 C -> 3 ... Z -> 26 AA -> 27 AB -> 28  ...   ",excel-sheet-column-title,Excel Sheet Column Title,"Math, String",4
"Given two version numbers, version1 and version2, compare them.   Version numbers consist of one or more revisions joined by a dot '.'. Each revision consists of digits and may contain leading zeros. Every revision contains at least one character. Revisions are 0-indexed from left to right, with the leftmost revision being revision 0, the next revision being revision 1, and so on. For example 2.5.33 and 0.1 are valid version numbers. To compare version numbers, compare their revisions in left-to-right order. Revisions are compared using their integer value ignoring any leading zeros. This means that revisions 1 and 001 are considered equal. If a version number does not specify a revision at an index, then treat the revision as 0. For example, version 1.0 is less than version 1.1 because their revision 0s are the same, but their revision 1s are 0 and 1 respectively, and 0 < 1. Return the following:  If version1 < version2, return -1. If version1 > version2, return 1. Otherwise, return 0.   ",compare-version-numbers,Compare Version Numbers,"Two Pointers, String",4
You are given the head of a singly linked-list. The list can be represented as:  L0 → L1 → … → Ln - 1 → Ln  Reorder the list to be on the following form:  L0 → Ln → L1 → Ln - 1 → L2 → Ln - 2 → …  You may not modify the values in the list's nodes. Only nodes themselves may be changed.  ,reorder-list,Reorder List,"Linked List, Two Pointers, Stack, Recursion",4
"Given a reference of a node in a connected undirected graph. Return a deep copy (clone) of the graph. Each node in the graph contains a value (int) and a list (List[Node]) of its neighbors.  class Node {     public int val;     public List<Node> neighbors; }    Test case format: For simplicity, each node's value is the same as the node's index (1-indexed). For example, the first node with val == 1, the second node with val == 2, and so on. The graph is represented in the test case using an adjacency list. An adjacency list is a collection of unordered lists used to represent a finite graph. Each list describes the set of neighbors of a node in the graph. The given node will always be the first node with val = 1. You must return the copy of the given node as a reference to the cloned graph.  ",clone-graph,Clone Graph,"Hash Table, Depth-First Search, Breadth-First Search, Graph",4
"You are given the root of a binary tree containing digits from 0 to 9 only. Each root-to-leaf path in the tree represents a number.  For example, the root-to-leaf path 1 -> 2 -> 3 represents the number 123.  Return the total sum of all root-to-leaf numbers. Test cases are generated so that the answer will fit in a 32-bit integer. A leaf node is a node with no children.  ",sum-root-to-leaf-numbers,Sum Root to Leaf Numbers,"Tree, Depth-First Search, Binary Tree",4
"Given an integer numRows, return the first numRows of Pascal's triangle. In Pascal's triangle, each number is the sum of the two numbers directly above it as shown:   ",pascals-triangle,Pascal's Triangle,"Array, Dynamic Programming",4
"Given two integer arrays preorder and inorder where preorder is the preorder traversal of a binary tree and inorder is the inorder traversal of the same tree, construct and return the binary tree.  ",construct-binary-tree-from-preorder-and-inorder-traversal,Construct Binary Tree from Preorder and Inorder Traversal,"Array, Hash Table, Divide and Conquer, Tree, Binary Tree",4
"You are given the root of a binary search tree (BST), where the values of exactly two nodes of the tree were swapped by mistake. Recover the tree without changing its structure.  ",recover-binary-search-tree,Recover Binary Search Tree,"Tree, Depth-First Search, Binary Search Tree, Binary Tree",4
"Given an integer n, return all the structurally unique BST's (binary search trees), which has exactly n nodes of unique values from 1 to n. Return the answer in any order.  ",unique-binary-search-trees-ii,Unique Binary Search Trees II,"Dynamic Programming, Backtracking, Tree, Binary Search Tree, Binary Tree",4
"Given the root of a binary tree, return the inorder traversal of its nodes' values.  ",binary-tree-inorder-traversal,Binary Tree Inorder Traversal,"Stack, Tree, Depth-First Search, Binary Tree",4
"A message containing letters from A-Z can be encoded into numbers using the following mapping:  'A' -> ""1"" 'B' -> ""2"" ... 'Z' -> ""26""  To decode an encoded message, all the digits must be grouped then mapped back into letters using the reverse of the mapping above (there may be multiple ways). For example, ""11106"" can be mapped into:  ""AAJF"" with the grouping (1 1 10 6) ""KJF"" with the grouping (11 10 6)  Note that the grouping (1 11 06) is invalid because ""06"" cannot be mapped into 'F' since ""6"" is different from ""06"". Given a string s containing only digits, return the number of ways to decode it. The test cases are generated so that the answer fits in a 32-bit integer.  ",decode-ways,Decode Ways,"String, Dynamic Programming",4
"Given the head of a linked list, rotate the list to the right by k places.  ",rotate-list,Rotate List,"Linked List, Two Pointers",4
"The n-queens puzzle is the problem of placing n queens on an n x n chessboard such that no two queens attack each other. Given an integer n, return all distinct solutions to the n-queens puzzle. You may return the answer in any order. Each solution contains a distinct board configuration of the n-queens' placement, where 'Q' and '.' both indicate a queen and an empty space, respectively.  ",n-queens,N-Queens,"Array, Backtracking",4
"Given an array nums of n integers, return an array of all the unique quadruplets [nums[a], nums[b], nums[c], nums[d]] such that:  0 <= a, b, c, d < n a, b, c, and d are distinct. nums[a] + nums[b] + nums[c] + nums[d] == target  You may return the answer in any order.  ",4sum,4Sum,"Array, Two Pointers, Sorting",4
"Given two strings s and part, perform the following operation on s until all occurrences of the substring part are removed:  Find the leftmost occurrence of the substring part and remove it from s.  Return s after removing all occurrences of part. A substring is a contiguous sequence of characters in a string.  ",remove-all-occurrences-of-a-substring,Remove All Occurrences of a Substring,String,3
"Given an array of integers nums, return the number of good pairs. A pair (i, j) is called good if nums[i] == nums[j] and i < j.  ",number-of-good-pairs,Number of Good Pairs,"Array, Hash Table, Math, Counting",3
"There is a car with capacity empty seats. The vehicle only drives east (i.e., it cannot turn around and drive west). You are given the integer capacity and an array trips where trips[i] = [numPassengersi, fromi, toi] indicates that the ith trip has numPassengersi passengers and the locations to pick them up and drop them off are fromi and toi respectively. The locations are given as the number of kilometers due east from the car's initial location. Return true if it is possible to pick up and drop off all passengers for all the given trips, or false otherwise.  ",car-pooling,Car Pooling,"Array, Sorting, Heap (Priority Queue), Simulation, Prefix Sum",3
"You have n  tiles, where each tile has one letter tiles[i] printed on it. Return the number of possible non-empty sequences of letters you can make using the letters printed on those tiles.  ",letter-tile-possibilities,Letter Tile Possibilities,"Hash Table, String, Backtracking, Counting",3
"Given an array of integers preorder, which represents the preorder traversal of a BST (i.e., binary search tree), construct the tree and return its root. It is guaranteed that there is always possible to find a binary search tree with the given requirements for the given test cases. A binary search tree is a binary tree where for every node, any descendant of Node.left has a value strictly less than Node.val, and any descendant of Node.right has a value strictly greater than Node.val. A preorder traversal of a binary tree displays the value of the node first, then traverses Node.left, then traverses Node.right.  ",construct-binary-search-tree-from-preorder-traversal,Construct Binary Search Tree from Preorder Traversal,"Array, Stack, Tree, Binary Search Tree, Monotonic Stack, Binary Tree",3
"Given a binary array nums and an integer k, return the maximum number of consecutive 1's in the array if you can flip at most k 0's.  ",max-consecutive-ones-iii,Max Consecutive Ones III,"Array, Binary Search, Sliding Window, Prefix Sum",3
"A parentheses string is valid if and only if:  It is the empty string, It can be written as AB (A concatenated with B), where A and B are valid strings, or It can be written as (A), where A is a valid string.  You are given a parentheses string s. In one move, you can insert a parenthesis at any position of the string.  For example, if s = ""()))"", you can insert an opening parenthesis to be ""(()))"" or a closing parenthesis to be ""())))"".  Return the minimum number of moves required to make s valid.  ",minimum-add-to-make-parentheses-valid,Minimum Add to Make Parentheses Valid,"String, Stack, Greedy",3
"Given a string s, return true if the s can be palindrome after deleting at most one character from it.  ",valid-palindrome-ii,Valid Palindrome II,"Two Pointers, String, Greedy",3
"Given the root of a binary tree, return the maximum width of the given tree. The maximum width of a tree is the maximum width among all levels. The width of one level is defined as the length between the end-nodes (the leftmost and rightmost non-null nodes), where the null nodes between the end-nodes that would be present in a complete binary tree extending down to that level are also counted into the length calculation. It is guaranteed that the answer will in the range of a 32-bit signed integer.  ",maximum-width-of-binary-tree,Maximum Width of Binary Tree,"Tree, Depth-First Search, Breadth-First Search, Binary Tree",3
"There is only one character 'A' on the screen of a notepad. You can perform one of two operations on this notepad for each step:  Copy All: You can copy all the characters present on the screen (a partial copy is not allowed). Paste: You can paste the characters which are copied last time.  Given an integer n, return the minimum number of operations to get the character 'A' exactly n times on the screen.  ",2-keys-keyboard,2 Keys Keyboard,"Math, Dynamic Programming",3
"On a single-threaded CPU, we execute a program containing n functions. Each function has a unique ID between 0 and n-1. Function calls are stored in a call stack: when a function call starts, its ID is pushed onto the stack, and when a function call ends, its ID is popped off the stack. The function whose ID is at the top of the stack is the current function being executed. Each time a function starts or ends, we write a log with the ID, whether it started or ended, and the timestamp. You are given a list logs, where logs[i] represents the ith log message formatted as a string ""{function_id}:{""start"" | ""end""}:{timestamp}"". For example, ""0:start:3"" means a function call with function ID 0 started at the beginning of timestamp 3, and ""1:end:2"" means a function call with function ID 1 ended at the end of timestamp 2. Note that a function can be called multiple times, possibly recursively. A function's exclusive time is the sum of execution times for all function calls in the program. For example, if a function is called twice, one call executing for 2 time units and another call executing for 1 time unit, the exclusive time is 2 + 1 = 3. Return the exclusive time of each function in an array, where the value at the ith index represents the exclusive time for the function with ID i.  ",exclusive-time-of-functions,Exclusive Time of Functions,"Array, Stack",3
"Given an integer array nums, you need to find one continuous subarray that if you only sort this subarray in ascending order, then the whole array will be sorted in ascending order. Return the shortest such subarray and output its length.  ",shortest-unsorted-continuous-subarray,Shortest Unsorted Continuous Subarray,"Array, Two Pointers, Stack, Greedy, Sorting, Monotonic Stack",3
"Given the roots of two binary trees root and subRoot, return true if there is a subtree of root with the same structure and node values of subRoot and false otherwise. A subtree of a binary tree tree is a tree that consists of a node in tree and all of this node's descendants. The tree tree could also be considered as a subtree of itself.  ",subtree-of-another-tree,Subtree of Another Tree,"Tree, Depth-First Search, String Matching, Binary Tree, Hash Function",3
"Given the root of a binary tree, return the length of the diameter of the tree. The diameter of a binary tree is the length of the longest path between any two nodes in a tree. This path may or may not pass through the root. The length of a path between two nodes is represented by the number of edges between them.  ",diameter-of-binary-tree,Diameter of Binary Tree,"Tree, Depth-First Search, Binary Tree",3
"Given a string s, find the longest palindromic subsequence's length in s. A subsequence is a sequence that can be derived from another sequence by deleting some or no elements without changing the order of the remaining elements.  ",longest-palindromic-subsequence,Longest Palindromic Subsequence,"String, Dynamic Programming",3
"The median is the middle value in an ordered integer list. If the size of the list is even, there is no middle value. So the median is the mean of the two middle values.  For examples, if arr = [2,3,4], the median is 3. For examples, if arr = [1,2,3,4], the median is (2 + 3) / 2 = 2.5.  You are given an integer array nums and an integer k. There is a sliding window of size k which is moving from the very left of the array to the very right. You can only see the k numbers in the window. Each time the sliding window moves right by one position. Return the median array for each window in the original array. Answers within 10-5 of the actual value will be accepted.  ",sliding-window-median,Sliding Window Median,"Array, Hash Table, Sliding Window, Heap (Priority Queue)",3
"Given an array of strings words (without duplicates), return all the concatenated words in the given list of words. A concatenated word is defined as a string that is comprised entirely of at least two shorter words (not necesssarily distinct) in the given array.  ",concatenated-words,Concatenated Words,"Array, String, Dynamic Programming, Depth-First Search, Trie",3
"Given an n-ary tree, return the level order traversal of its nodes' values. Nary-Tree input serialization is represented in their level order traversal, each group of children is separated by the null value (See examples).  ",n-ary-tree-level-order-traversal,N-ary Tree Level Order Traversal,"Tree, Breadth-First Search",3
"Given an integer n, return a string array answer (1-indexed) where:  answer[i] == ""FizzBuzz"" if i is divisible by 3 and 5. answer[i] == ""Fizz"" if i is divisible by 3. answer[i] == ""Buzz"" if i is divisible by 5. answer[i] == i (as a string) if none of the above conditions are true.   ",fizz-buzz,Fizz Buzz,"Math, String, Simulation",3
"A frog is crossing a river. The river is divided into some number of units, and at each unit, there may or may not exist a stone. The frog can jump on a stone, but it must not jump into the water. Given a list of stones' positions (in units) in sorted ascending order, determine if the frog can cross the river by landing on the last stone. Initially, the frog is on the first stone and assumes the first jump must be 1 unit. If the frog's last jump was k units, its next jump must be either k - 1, k, or k + 1 units. The frog can only jump in the forward direction.  ",frog-jump,Frog Jump,"Array, Dynamic Programming",3
"Given string num representing a non-negative integer num, and an integer k, return the smallest possible integer after removing k digits from num.  ",remove-k-digits,Remove K Digits,"String, Stack, Greedy, Monotonic Stack",3
"There are n bulbs that are initially off. You first turn on all the bulbs, then you turn off every second bulb. On the third round, you toggle every third bulb (turning on if it's off or turning off if it's on). For the ith round, you toggle every i bulb. For the nth round, you only toggle the last bulb. Return the number of bulbs that are on after n rounds.  ",bulb-switcher,Bulb Switcher,"Math, Brainteaser",3
"According to Wikipedia's article: ""The Game of Life, also known simply as Life, is a cellular automaton devised by the British mathematician John Horton Conway in 1970."" The board is made up of an m x n grid of cells, where each cell has an initial state: live (represented by a 1) or dead (represented by a 0). Each cell interacts with its eight neighbors (horizontal, vertical, diagonal) using the following four rules (taken from the above Wikipedia article):  Any live cell with fewer than two live neighbors dies as if caused by under-population. Any live cell with two or three live neighbors lives on to the next generation. Any live cell with more than three live neighbors dies, as if by over-population. Any dead cell with exactly three live neighbors becomes a live cell, as if by reproduction.  The next state is created by applying the above rules simultaneously to every cell in the current state, where births and deaths occur simultaneously. Given the current state of the m x n grid board, return the next state.  ",game-of-life,Game of Life,"Array, Matrix, Simulation",3
"There is a singly-linked list head and we want to delete a node node in it. You are given the node to be deleted node. You will not be given access to the first node of head. All the values of the linked list are unique, and it is guaranteed that the given node node is not the last node in the linked list. Delete the given node. Note that by deleting the node, we do not mean removing it from memory. We mean:  The value of the given node should not exist in the linked list. The number of nodes in the linked list should decrease by one. All the values before node should be in the same order. All the values after node should be in the same order.  Custom testing:  For the input, you should provide the entire linked list head and the node to be given node. node should not be the last node of the list and should be an actual node in the list. We will build the linked list and pass the node to your function. The output will be the entire list after calling your function.   ",delete-node-in-a-linked-list,Delete Node in a Linked List,Linked List,3
"Implement a first in first out (FIFO) queue using only two stacks. The implemented queue should support all the functions of a normal queue (push, peek, pop, and empty). Implement the MyQueue class:  void push(int x) Pushes element x to the back of the queue. int pop() Removes the element from the front of the queue and returns it. int peek() Returns the element at the front of the queue. boolean empty() Returns true if the queue is empty, false otherwise.  Notes:  You must use only standard operations of a stack, which means only push to top, peek/pop from top, size, and is empty operations are valid. Depending on your language, the stack may not be supported natively. You may simulate a stack using a list or deque (double-ended queue) as long as you use only a stack's standard operations.   ",implement-queue-using-stacks,Implement Queue using Stacks,"Stack, Design, Queue",3
"Given an integer array of size n, find all elements that appear more than ⌊ n/3 ⌋ times.  ",majority-element-ii,Majority Element II,"Array, Hash Table, Sorting, Counting",3
"Given an integer array nums, return true if any value appears at least twice in the array, and return false if every element is distinct.  ",contains-duplicate,Contains Duplicate,"Array, Hash Table, Sorting",3
You are given a string s. You can convert s to a palindrome by adding characters in front of it. Return the shortest palindrome you can find by performing this transformation.  ,shortest-palindrome,Shortest Palindrome,"String, Rolling Hash, String Matching, Hash Function",3
"Given the head of a linked list and an integer val, remove all the nodes of the linked list that has Node.val == val, and return the new head.  ",remove-linked-list-elements,Remove Linked List Elements,"Linked List, Recursion",3
"Given an integer array nums, find a subarray that has the largest product, and return the product. The test cases are generated so that the answer will fit in a 32-bit integer.  ",maximum-product-subarray,Maximum Product Subarray,"Array, Dynamic Programming",3
"Given the head of a linked list, return the list after sorting it in ascending order.  ",sort-list,Sort List,"Linked List, Two Pointers, Divide and Conquer, Sorting, Merge Sort",3
"Given head, the head of a linked list, determine if the linked list has a cycle in it. There is a cycle in a linked list if there is some node in the list that can be reached again by continuously following the next pointer. Internally, pos is used to denote the index of the node that tail's next pointer is connected to. Note that pos is not passed as a parameter. Return true if there is a cycle in the linked list. Otherwise, return false.  ",linked-list-cycle,Linked List Cycle,"Hash Table, Linked List, Two Pointers",3
"Given a string s and a dictionary of strings wordDict, add spaces in s to construct a sentence where each word is a valid dictionary word. Return all such possible sentences in any order. Note that the same word in the dictionary may be reused multiple times in the segmentation.  ",word-break-ii,Word Break II,"Array, Hash Table, String, Dynamic Programming, Backtracking, Trie, Memoization",3
"You are given an integer array prices where prices[i] is the price of a given stock on the ith day. On each day, you may decide to buy and/or sell the stock. You can only hold at most one share of the stock at any time. However, you can buy it then immediately sell it on the same day. Find and return the maximum profit you can achieve.  ",best-time-to-buy-and-sell-stock-ii,Best Time to Buy and Sell Stock II,"Array, Dynamic Programming, Greedy",3
"Given a triangle array, return the minimum path sum from top to bottom. For each step, you may move to an adjacent number of the row below. More formally, if you are on index i on the current row, you may move to either index i or index i + 1 on the next row.  ",triangle,Triangle,"Array, Dynamic Programming",3
"Given the head of a singly linked list where elements are sorted in ascending order, convert it to a height-balanced binary search tree.  ",convert-sorted-list-to-binary-search-tree,Convert Sorted List to Binary Search Tree,"Linked List, Divide and Conquer, Tree, Binary Search Tree, Binary Tree",3
"Given the root of a binary tree, return its maximum depth. A binary tree's maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.  ",maximum-depth-of-binary-tree,Maximum Depth of Binary Tree,"Tree, Depth-First Search, Breadth-First Search, Binary Tree",3
"A valid IP address consists of exactly four integers separated by single dots. Each integer is between 0 and 255 (inclusive) and cannot have leading zeros.  For example, ""0.1.2.201"" and ""192.168.1.1"" are valid IP addresses, but ""0.011.255.245"", ""192.168.1.312"" and ""192.168@1.1"" are invalid IP addresses.  Given a string s containing only digits, return all possible valid IP addresses that can be formed by inserting dots into s. You are not allowed to reorder or remove any digits in s. You may return the valid IP addresses in any order.  ",restore-ip-addresses,Restore IP Addresses,"String, Backtracking",3
"Given an integer array nums of unique elements, return all possible subsets (the power set). The solution set must not contain duplicate subsets. Return the solution in any order.  ",subsets,Subsets,"Array, Backtracking, Bit Manipulation",3
"Given a non-negative integer x, return the square root of x rounded down to the nearest integer. The returned integer should be non-negative as well. You must not use any built-in exponent function or operator.  For example, do not use pow(x, 0.5) in c++ or x ** 0.5 in python.   ",sqrtx,Sqrt(x),"Math, Binary Search",3
"Given a collection of numbers, nums, that might contain duplicates, return all possible unique permutations in any order.  ",permutations-ii,Permutations II,"Array, Backtracking",3
"Given two integers dividend and divisor, divide two integers without using multiplication, division, and mod operator. The integer division should truncate toward zero, which means losing its fractional part. For example, 8.345 would be truncated to 8, and -2.7335 would be truncated to -2. Return the quotient after dividing dividend by divisor. Note: Assume we are dealing with an environment that could only store integers within the 32-bit signed integer range: [−231, 231 − 1]. For this problem, if the quotient is strictly greater than 231 - 1, then return 231 - 1, and if the quotient is strictly less than -231, then return -231.  ",divide-two-integers,Divide Two Integers,"Math, Bit Manipulation",3
"Given an integer array nums of length n and an integer target, find three integers in nums such that the sum is closest to target. Return the sum of the three integers. You may assume that each input would have exactly one solution.  ",3sum-closest,3Sum Closest,"Array, Two Pointers, Sorting",3
You are given a string number representing a positive integer and a character digit. Return the resulting string after removing exactly one occurrence of digit from number such that the value of the resulting string in decimal form is maximized. The test cases are generated such that digit occurs at least once in number.  ,remove-digit-from-number-to-maximize-result,Remove Digit From Number to Maximize Result,"String, Greedy, Enumeration",2
"An integer array original is transformed into a doubled array changed by appending twice the value of every element in original, and then randomly shuffling the resulting array. Given an array changed, return original if changed is a doubled array. If changed is not a doubled array, return an empty array. The elements in original may be returned in any order.  ",find-original-array-from-doubled-array,Find Original Array From Doubled Array,"Array, Hash Table, Greedy, Sorting",2
"Given an integer n, return true if it is possible to represent n as the sum of distinct powers of three. Otherwise, return false. An integer y is a power of three if there exists an integer x such that y == 3x.  ",check-if-number-is-a-sum-of-powers-of-three,Check if Number is a Sum of Powers of Three,Math,2
"You are given two arrays of integers nums1 and nums2, possibly of different lengths. The values in the arrays are between 1 and 6, inclusive. In one operation, you can change any integer's value in any of the arrays to any value between 1 and 6, inclusive. Return the minimum number of operations required to make the sum of values in nums1 equal to the sum of values in nums2. Return -1​​​​​ if it is not possible to make the sum of the two arrays equal.  ",equal-sum-arrays-with-minimum-number-of-operations,Equal Sum Arrays With Minimum Number of Operations,"Array, Hash Table, Greedy, Counting",2
"You would like to make dessert and are preparing to buy the ingredients. You have n ice cream base flavors and m types of toppings to choose from. You must follow these rules when making your dessert:  There must be exactly one ice cream base. You can add one or more types of topping or have no toppings at all. There are at most two of each type of topping.  You are given three inputs:  baseCosts, an integer array of length n, where each baseCosts[i] represents the price of the ith ice cream base flavor. toppingCosts, an integer array of length m, where each toppingCosts[i] is the price of one of the ith topping. target, an integer representing your target price for dessert.  You want to make a dessert with a total cost as close to target as possible. Return the closest possible cost of the dessert to target. If there are multiple, return the lower one.  ",closest-dessert-cost,Closest Dessert Cost,"Array, Dynamic Programming, Backtracking",2
"You are given an integer matrix isWater of size m x n that represents a map of land and water cells.  If isWater[i][j] == 0, cell (i, j) is a land cell. If isWater[i][j] == 1, cell (i, j) is a water cell.  You must assign each cell a height in a way that follows these rules:  The height of each cell must be non-negative. If the cell is a water cell, its height must be 0. Any two adjacent cells must have an absolute height difference of at most 1. A cell is adjacent to another cell if the former is directly north, east, south, or west of the latter (i.e., their sides are touching).  Find an assignment of heights such that the maximum height in the matrix is maximized. Return an integer matrix height of size m x n where height[i][j] is cell (i, j)'s height. If there are multiple solutions, return any of them.  ",map-of-highest-peak,Map of Highest Peak,"Array, Breadth-First Search, Matrix",2
"You are working in a ball factory where you have n balls numbered from lowLimit up to highLimit inclusive (i.e., n == highLimit - lowLimit + 1), and an infinite number of boxes numbered from 1 to infinity. Your job at this factory is to put each ball in the box with a number equal to the sum of digits of the ball's number. For example, the ball number 321 will be put in the box number 3 + 2 + 1 = 6 and the ball number 10 will be put in the box number 1 + 0 = 1. Given two integers lowLimit and highLimit, return the number of balls in the box with the most balls.  ",maximum-number-of-balls-in-a-box,Maximum Number of Balls in a Box,"Hash Table, Math, Counting",2
"There is a special kind of apple tree that grows apples every day for n days. On the ith day, the tree grows apples[i] apples that will rot after days[i] days, that is on day i + days[i] the apples will be rotten and cannot be eaten. On some days, the apple tree does not grow any apples, which are denoted by apples[i] == 0 and days[i] == 0. You decided to eat at most one apple a day (to keep the doctors away). Note that you can keep eating after the first n days. Given two integer arrays days and apples of length n, return the maximum number of apples you can eat.  ",maximum-number-of-eaten-apples,Maximum Number of Eaten Apples,"Array, Greedy, Heap (Priority Queue)",2
"You are given an integer array nums. You can choose exactly one index (0-indexed) and remove the element. Notice that the index of the elements may change after the removal. For example, if nums = [6,1,7,4,1]:  Choosing to remove index 1 results in nums = [6,7,4,1]. Choosing to remove index 2 results in nums = [6,1,4,1]. Choosing to remove index 4 results in nums = [6,1,7,4].  An array is fair if the sum of the odd-indexed values equals the sum of the even-indexed values. Return the number of indices that you could choose such that after the removal, nums is fair.   ",ways-to-make-a-fair-array,Ways to Make a Fair Array,"Array, Dynamic Programming",2
"You are given an integer array heights representing the heights of buildings, some bricks, and some ladders. You start your journey from building 0 and move to the next building by possibly using bricks or ladders. While moving from building i to building i+1 (0-indexed),  If the current building's height is greater than or equal to the next building's height, you do not need a ladder or bricks. If the current building's height is less than the next building's height, you can either use one ladder or (h[i+1] - h[i]) bricks.  Return the furthest building index (0-indexed) you can reach if you use the given ladders and bricks optimally.  ",furthest-building-you-can-reach,Furthest Building You Can Reach,"Array, Greedy, Heap (Priority Queue)",2
"Given a string s containing only lowercase English letters and the '?' character, convert all the '?' characters into lowercase letters such that the final string does not contain any consecutive repeating characters. You cannot modify the non '?' characters. It is guaranteed that there are no consecutive repeating characters in the given string except for '?'. Return the final string after all the conversions (possibly zero) have been made. If there is more than one solution, return any of them. It can be shown that an answer is always possible with the given constraints.  ",replace-all-s-to-avoid-consecutive-repeating-characters,Replace All ?'s to Avoid Consecutive Repeating Characters,String,2
"You have an array arr of length n where arr[i] = (2 * i) + 1 for all valid values of i (i.e., 0 <= i < n). In one operation, you can select two indices x and y where 0 <= x, y < n and subtract 1 from arr[x] and add 1 to arr[y] (i.e., perform arr[x] -=1 and arr[y] += 1). The goal is to make all the elements of the array equal. It is guaranteed that all the elements of the array can be made equal using some operations. Given an integer n, the length of the array, return the minimum number of operations needed to make all the elements of arr equal.  ",minimum-operations-to-make-array-equal,Minimum Operations to Make Array Equal,Math,2
"Given an array arr of positive integers sorted in a strictly increasing order, and an integer k. Return the kth positive integer that is missing from this array.  ",kth-missing-positive-number,Kth Missing Positive Number,"Array, Binary Search",2
"Given an array of strings names of size n. You will create n folders in your file system such that, at the ith minute, you will create a folder with the name names[i]. Since two files cannot have the same name, if you enter a folder name that was previously used, the system will have a suffix addition to its name in the form of (k), where, k is the smallest positive integer such that the obtained name remains unique. Return an array of strings of length n where ans[i] is the actual name the system will assign to the ith folder when you create it.  ",making-file-names-unique,Making File Names Unique,"Array, Hash Table, String",2
Given an array nums. We define a running sum of an array as runningSum[i] = sum(nums[0]…nums[i]). Return the running sum of nums.  ,running-sum-of-1d-array,Running Sum of 1d Array,"Array, Prefix Sum",2
"Given an integer n, return a string with n characters such that each character in such string occurs an odd number of times. The returned string must contain only lowercase English letters. If there are multiples valid strings, return any of them.    ",generate-a-string-with-characters-that-have-odd-counts,Generate a String With Characters That Have Odd Counts,String,2
Given a binary tree root and a linked list with head as the first node.  Return True if all the elements in the linked list starting from the head correspond to some downward path connected in the binary tree otherwise return False. In this context downward path means a path that starts at some node and goes downwards.  ,linked-list-in-binary-tree,Linked List in Binary Tree,"Linked List, Tree, Depth-First Search, Breadth-First Search, Binary Tree",2
"Given a string s consisting only of characters a, b and c. Return the number of substrings containing at least one occurrence of all these characters a, b and c.  ",number-of-substrings-containing-all-three-characters,Number of Substrings Containing All Three Characters,"Hash Table, String, Sliding Window",2
"Given an integer num, return the number of steps to reduce it to zero. In one step, if the current number is even, you have to divide it by 2, otherwise, you have to subtract 1 from it.  ",number-of-steps-to-reduce-a-number-to-zero,Number of Steps to Reduce a Number to Zero,"Math, Bit Manipulation",2
"A matrix diagonal is a diagonal line of cells starting from some cell in either the topmost row or leftmost column and going in the bottom-right direction until reaching the matrix's end. For example, the matrix diagonal starting from mat[2][0], where mat is a 6 x 3 matrix, includes cells mat[2][0], mat[3][1], and mat[4][2]. Given an m x n matrix mat of integers, sort each matrix diagonal in ascending order and return the resulting matrix.  ",sort-the-matrix-diagonally,Sort the Matrix Diagonally,"Array, Sorting, Matrix",2
"You are given an array coordinates, coordinates[i] = [x, y], where [x, y] represents the coordinate of a point. Check if these points make a straight line in the XY plane.    ",check-if-it-is-a-straight-line,Check If It Is a Straight Line,"Array, Math, Geometry",2
"You are given a string s and an integer k, a k duplicate removal consists of choosing k adjacent and equal letters from s and removing them, causing the left and the right side of the deleted substring to concatenate together. We repeatedly make k duplicate removals on s until we no longer can. Return the final string after all such duplicate removals have been made. It is guaranteed that the answer is unique.  ",remove-all-adjacent-duplicates-in-string-ii,Remove All Adjacent Duplicates in String II,"String, Stack",2
"You are given a string s that consists of lower case English letters and brackets. Reverse the strings in each pair of matching parentheses, starting from the innermost one. Your result should not contain any brackets.  ",reverse-substrings-between-each-pair-of-parentheses,Reverse Substrings Between Each Pair of Parentheses,"String, Stack",2
"Implement a SnapshotArray that supports the following interface:  SnapshotArray(int length) initializes an array-like data structure with the given length. Initially, each element equals 0. void set(index, val) sets the element at the given index to be equal to val. int snap() takes a snapshot of the array and returns the snap_id: the total number of times we called snap() minus 1. int get(index, snap_id) returns the value at the given index, at the time we took the snapshot with the given snap_id   ",snapshot-array,Snapshot Array,"Array, Hash Table, Binary Search, Design",2
"Given the root of a binary tree, each node in the tree has a distinct value. After deleting all nodes with a value in to_delete, we are left with a forest (a disjoint union of trees). Return the roots of the trees in the remaining forest. You may return the result in any order.  ",delete-nodes-and-return-forest,Delete Nodes And Return Forest,"Tree, Depth-First Search, Binary Tree",2
"A valid parentheses string is either empty """", ""("" + A + "")"", or A + B, where A and B are valid parentheses strings, and + represents string concatenation.  For example, """", ""()"", ""(())()"", and ""(()(()))"" are all valid parentheses strings.  A valid parentheses string s is primitive if it is nonempty, and there does not exist a way to split it into s = A + B, with A and B nonempty valid parentheses strings. Given a valid parentheses string s, consider its primitive decomposition: s = P1 + P2 + ... + Pk, where Pi are primitive valid parentheses strings. Return s after removing the outermost parentheses of every primitive string in the primitive decomposition of s.  ",remove-outermost-parentheses,Remove Outermost Parentheses,"String, Stack",2
"Given the root of a binary tree with unique values and the values of two different nodes of the tree x and y, return true if the nodes corresponding to the values x and y in the tree are cousins, or false otherwise. Two nodes of a binary tree are cousins if they have the same depth with different parents. Note that in a binary tree, the root node is at the depth 0, and children of each depth k node are at the depth k + 1.  ",cousins-in-binary-tree,Cousins in Binary Tree,"Tree, Depth-First Search, Breadth-First Search, Binary Tree",2
"Given two integer arrays pushed and popped each with distinct values, return true if this could have been the result of a sequence of push and pop operations on an initially empty stack, or false otherwise.  ",validate-stack-sequences,Validate Stack Sequences,"Array, Stack, Simulation",2
"A permutation perm of n + 1 integers of all the integers in the range [0, n] can be represented as a string s of length n where:  s[i] == 'I' if perm[i] < perm[i + 1], and s[i] == 'D' if perm[i] > perm[i + 1].  Given a string s, reconstruct the permutation perm and return it. If there are multiple valid permutations perm, return any of them.  ",di-string-match,DI String Match,"Array, Two Pointers, String, Greedy",2
"The chess knight has a unique movement, it may move two squares vertically and one square horizontally, or two squares horizontally and one square vertically (with both forming the shape of an L). The possible movements of chess knight are shown in this diagaram: A chess knight can move as indicated in the chess diagram below:  We have a chess knight and a phone pad as shown below, the knight can only stand on a numeric cell (i.e. blue cell).  Given an integer n, return how many distinct phone numbers of length n we can dial. You are allowed to place the knight on any numeric cell initially and then you should perform n - 1 jumps to dial a number of length n. All jumps should be valid knight jumps. As the answer may be very large, return the answer modulo 109 + 7.  ",knight-dialer,Knight Dialer,Dynamic Programming,2
"Given an array of integers nums, half of the integers in nums are odd, and the other half are even. Sort the array so that whenever nums[i] is odd, i is odd, and whenever nums[i] is even, i is even. Return any answer array that satisfies this condition.  ",sort-array-by-parity-ii,Sort Array By Parity II,"Array, Two Pointers, Sorting",2
"Design a stack-like data structure to push elements to the stack and pop the most frequent element from the stack. Implement the FreqStack class:  FreqStack() constructs an empty frequency stack. void push(int val) pushes an integer val onto the top of the stack. int pop() removes and returns the most frequent element in the stack. 	 If there is a tie for the most frequent element, the element closest to the stack's top is removed and returned.     ",maximum-frequency-stack,Maximum Frequency Stack,"Hash Table, Stack, Design, Ordered Set",2
"You are given an array people where people[i] is the weight of the ith person, and an infinite number of boats where each boat can carry a maximum weight of limit. Each boat carries at most two people at the same time, provided the sum of the weight of those people is at most limit. Return the minimum number of boats to carry every given person.  ",boats-to-save-people,Boats to Save People,"Array, Two Pointers, Greedy, Sorting",2
"Given the head of a singly linked list, return the middle node of the linked list. If there are two middle nodes, return the second middle node.  ",middle-of-the-linked-list,Middle of the Linked List,"Linked List, Two Pointers",2
"Given a 2D integer array matrix, return the transpose of matrix. The transpose of a matrix is the matrix flipped over its main diagonal, switching the matrix's row and column indices.   ",transpose-matrix,Transpose Matrix,"Array, Matrix, Simulation",2
"Given two strings s and goal, return true if and only if s can become goal after some number of shifts on s. A shift on s consists of moving the leftmost character of s to the rightmost position.  For example, if s = ""abcde"", then it will be ""bcdea"" after one shift.   ",rotate-string,Rotate String,"String, String Matching",2
"Given a string s, you can transform every letter individually to be lowercase or uppercase to create another string. Return a list of all possible strings we could create. Return the output in any order.  ",letter-case-permutation,Letter Case Permutation,"String, Backtracking, Bit Manipulation",2
"Given the root of a Binary Search Tree (BST), return the minimum difference between the values of any two different nodes in the tree.  ",minimum-distance-between-bst-nodes,Minimum Distance Between BST Nodes,"Tree, Depth-First Search, Breadth-First Search, Binary Search Tree, Binary Tree",2
"An integer has monotone increasing digits if and only if each pair of adjacent digits x and y satisfy x <= y. Given an integer n, return the largest number that is less than or equal to n with monotone increasing digits.  ",monotone-increasing-digits,Monotone Increasing Digits,"Math, Greedy",2
"Given an array of integers nums, calculate the pivot index of this array. The pivot index is the index where the sum of all the numbers strictly to the left of the index is equal to the sum of all the numbers strictly to the index's right. If the index is on the left edge of the array, then the left sum is 0 because there are no elements to the left. This also applies to the right edge of the array. Return the leftmost pivot index. If no such index exists, return -1.  ",find-pivot-index,Find Pivot Index,"Array, Prefix Sum",2
"Design a HashSet without using any built-in hash table libraries. Implement MyHashSet class:  void add(key) Inserts the value key into the HashSet. bool contains(key) Returns whether the value key exists in the HashSet or not. void remove(key) Removes the value key in the HashSet. If key does not exist in the HashSet, do nothing.   ",design-hashset,Design HashSet,"Array, Hash Table, Linked List, Design, Hash Function",2
"Given the root of a binary tree, return the length of the longest path, where each node in the path has the same value. This path may or may not pass through the root. The length of the path between two nodes is represented by the number of edges between them.  ",longest-univalue-path,Longest Univalue Path,"Tree, Depth-First Search, Binary Tree",2
"In this problem, a tree is an undirected graph that is connected and has no cycles. You are given a graph that started as a tree with n nodes labeled from 1 to n, with one additional edge added. The added edge has two different vertices chosen from 1 to n, and was not an edge that already existed. The graph is represented as an array edges of length n where edges[i] = [ai, bi] indicates that there is an edge between nodes ai and bi in the graph. Return an edge that can be removed so that the resulting graph is a tree of n nodes. If there are multiple answers, return the answer that occurs last in the input.  ",redundant-connection,Redundant Connection,"Depth-First Search, Breadth-First Search, Union Find, Graph",2
"Given the root of a binary search tree and the lowest and highest boundaries as low and high, trim the tree so that all its elements lies in [low, high]. Trimming the tree should not change the relative structure of the elements that will remain in the tree (i.e., any node's descendant should remain a descendant). It can be proven that there is a unique answer. Return the root of the trimmed binary search tree. Note that the root may change depending on the given bounds.  ",trim-a-binary-search-tree,Trim a Binary Search Tree,"Tree, Depth-First Search, Binary Search Tree, Binary Tree",2
"An image smoother is a filter of the size 3 x 3 that can be applied to each cell of an image by rounding down the average of the cell and the eight surrounding cells (i.e., the average of the nine cells in the blue smoother). If one or more of the surrounding cells of a cell is not present, we do not consider it in the average (i.e., the average of the four cells in the red smoother).  Given an m x n integer matrix img representing the grayscale of an image, return the image after applying the smoother on each cell of it.  ",image-smoother,Image Smoother,"Array, Matrix",2
"A message containing letters from A-Z can be encoded into numbers using the following mapping:  'A' -> ""1"" 'B' -> ""2"" ... 'Z' -> ""26""  To decode an encoded message, all the digits must be grouped then mapped back into letters using the reverse of the mapping above (there may be multiple ways). For example, ""11106"" can be mapped into:  ""AAJF"" with the grouping (1 1 10 6) ""KJF"" with the grouping (11 10 6)  Note that the grouping (1 11 06) is invalid because ""06"" cannot be mapped into 'F' since ""6"" is different from ""06"". In addition to the mapping above, an encoded message may contain the '*' character, which can represent any digit from '1' to '9' ('0' is excluded). For example, the encoded message ""1*"" may represent any of the encoded messages ""11"", ""12"", ""13"", ""14"", ""15"", ""16"", ""17"", ""18"", or ""19"". Decoding ""1*"" is equivalent to decoding any of the encoded messages it can represent. Given a string s consisting of digits and '*' characters, return the number of ways to decode it. Since the answer may be very large, return it modulo 109 + 7.  ",decode-ways-ii,Decode Ways II,"String, Dynamic Programming",2
"Given the root of a binary tree, return the average value of the nodes on each level in the form of an array. Answers within 10-5 of the actual answer will be accepted.  ",average-of-levels-in-binary-tree,Average of Levels in Binary Tree,"Tree, Depth-First Search, Breadth-First Search, Binary Tree",2
"Given a characters array tasks, representing the tasks a CPU needs to do, where each letter represents a different task. Tasks could be done in any order. Each task is done in one unit of time. For each unit of time, the CPU could complete either one task or just be idle. However, there is a non-negative integer n that represents the cooldown period between two same tasks (the same letter in the array), that is that there must be at least n units of time between any two same tasks. Return the least number of units of times that the CPU will take to finish all the given tasks.  ",task-scheduler,Task Scheduler,"Array, Hash Table, Greedy, Sorting, Heap (Priority Queue), Counting",2
"Given the coordinates of four points in 2D space p1, p2, p3 and p4, return true if the four points construct a square. The coordinate of a point pi is represented as [xi, yi]. The input is not given in any order. A valid square has four equal sides with positive length and four equal angles (90-degree angles).  ",valid-square,Valid Square,"Math, Geometry",2
"Given a n-ary tree, find its maximum depth. The maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node. Nary-Tree input serialization is represented in their level order traversal, each group of children is separated by the null value (See examples).  ",maximum-depth-of-n-ary-tree,Maximum Depth of N-ary Tree,"Tree, Depth-First Search, Breadth-First Search",2
"Let's play the minesweeper game (Wikipedia, online game)! You are given an m x n char matrix board representing the game board where:  'M' represents an unrevealed mine, 'E' represents an unrevealed empty square, 'B' represents a revealed blank square that has no adjacent mines (i.e., above, below, left, right, and all 4 diagonals), digit ('1' to '8') represents how many mines are adjacent to this revealed square, and 'X' represents a revealed mine.  You are also given an integer array click where click = [clickr, clickc] represents the next click position among all the unrevealed squares ('M' or 'E'). Return the board after revealing this position according to the following rules:  If a mine 'M' is revealed, then the game is over. You should change it to 'X'. If an empty square 'E' with no adjacent mines is revealed, then change it to a revealed blank 'B' and all of its adjacent unrevealed squares should be revealed recursively. If an empty square 'E' with at least one adjacent mine is revealed, then change it to a digit ('1' to '8') representing the number of adjacent mines. Return the board when no more squares will be revealed.   ",minesweeper,Minesweeper,"Array, Depth-First Search, Breadth-First Search, Matrix",2
"You are given a 0-indexed array of positive integers w where w[i] describes the weight of the ith index. You need to implement the function pickIndex(), which randomly picks an index in the range [0, w.length - 1] (inclusive) and returns it. The probability of picking an index i is w[i] / sum(w).  For example, if w = [1, 3], the probability of picking index 0 is 1 / (1 + 3) = 0.25 (i.e., 25%), and the probability of picking index 1 is 3 / (1 + 3) = 0.75 (i.e., 75%).   ",random-pick-with-weight,Random Pick with Weight,"Array, Math, Binary Search, Prefix Sum, Randomized",2
"Given a binary array nums, return the maximum length of a contiguous subarray with an equal number of 0 and 1.  ",contiguous-array,Contiguous Array,"Array, Hash Table, Prefix Sum",2
"You have n super washing machines on a line. Initially, each washing machine has some dresses or is empty. For each move, you could choose any m (1 <= m <= n) washing machines, and pass one dress of each washing machine to one of its adjacent washing machines at the same time. Given an integer array machines representing the number of dresses in each washing machine from left to right on the line, return the minimum number of moves to make all the washing machines have the same number of dresses. If it is not possible to do it, return -1.  ",super-washing-machines,Super Washing Machines,"Array, Greedy",2
"Given an integer n represented as a string, return the smallest good base of n. We call k >= 2 a good base of n, if all digits of n base k are 1's.  ",smallest-good-base,Smallest Good Base,"Math, Binary Search",2
"Winter is coming! During the contest, your first job is to design a standard heater with a fixed warm radius to warm all the houses. Every house can be warmed, as long as the house is within the heater's warm radius range.  Given the positions of houses and heaters on a horizontal line, return the minimum radius standard of heaters so that those heaters could cover all houses. Notice that all the heaters follow your radius standard, and the warm radius will the same.  ",heaters,Heaters,"Array, Two Pointers, Binary Search, Sorting",2
"You are given an integer array matchsticks where matchsticks[i] is the length of the ith matchstick. You want to use all the matchsticks to make one square. You should not break any stick, but you can link them up, and each matchstick must be used exactly one time. Return true if you can make this square and false otherwise.  ",matchsticks-to-square,Matchsticks to Square,"Array, Dynamic Programming, Backtracking, Bit Manipulation, Bitmask",2
"Given a string queryIP, return ""IPv4"" if IP is a valid IPv4 address, ""IPv6"" if IP is a valid IPv6 address or ""Neither"" if IP is not a correct IP of any type. A valid IPv4 address is an IP in the form ""x1.x2.x3.x4"" where 0 <= xi <= 255 and xi cannot contain leading zeros. For example, ""192.168.1.1"" and ""192.168.1.0"" are valid IPv4 addresses while ""192.168.01.1"", ""192.168.1.00"", and ""192.168@1.1"" are invalid IPv4 addresses. A valid IPv6 address is an IP in the form ""x1:x2:x3:x4:x5:x6:x7:x8"" where:  1 <= xi.length <= 4 xi is a hexadecimal string which may contain digits, lowercase English letter ('a' to 'f') and upper-case English letters ('A' to 'F'). Leading zeros are allowed in xi.  For example, ""2001:0db8:85a3:0000:0000:8a2e:0370:7334"" and ""2001:db8:85a3:0:0:8A2E:0370:7334"" are valid IPv6 addresses, while ""2001:0db8:85a3::8A2E:037j:7334"" and ""02001:0db8:85a3:0000:0000:8a2e:0370:7334"" are invalid IPv6 addresses.  ",validate-ip-address,Validate IP Address,String,2
"Serialization is converting a data structure or object into a sequence of bits so that it can be stored in a file or memory buffer, or transmitted across a network connection link to be reconstructed later in the same or another computer environment. Design an algorithm to serialize and deserialize a binary search tree. There is no restriction on how your serialization/deserialization algorithm should work. You need to ensure that a binary search tree can be serialized to a string, and this string can be deserialized to the original tree structure. The encoded string should be as compact as possible.  ",serialize-and-deserialize-bst,Serialize and Deserialize BST,"String, Tree, Depth-First Search, Breadth-First Search, Design, Binary Search Tree, Binary Tree",2
"Given an array nums of n integers where nums[i] is in the range [1, n], return an array of all the integers in the range [1, n] that do not appear in nums.  ",find-all-numbers-disappeared-in-an-array,Find All Numbers Disappeared in an Array,"Array, Hash Table",2
"Given an array of intervals intervals where intervals[i] = [starti, endi], return the minimum number of intervals you need to remove to make the rest of the intervals non-overlapping.  ",non-overlapping-intervals,Non-overlapping Intervals,"Array, Dynamic Programming, Greedy, Sorting",2
"Given a string s and an integer k, return the length of the longest substring of s such that the frequency of each character in this substring is greater than or equal to k.  ",longest-substring-with-at-least-k-repeating-characters,Longest Substring with At Least K Repeating Characters,"Hash Table, String, Divide and Conquer, Sliding Window",2
"Given a singly linked list, return a random node's value from the linked list. Each node must have the same probability of being chosen. Implement the Solution class:  Solution(ListNode head) Initializes the object with the head of the singly-linked list head. int getRandom() Chooses a node randomly from the list and returns its value. All the nodes of the list should be equally likely to be chosen.   ",linked-list-random-node,Linked List Random Node,"Linked List, Math, Reservoir Sampling, Randomized",2
"Given an array of distinct integers nums and a target integer target, return the number of possible combinations that add up to target. The test cases are generated so that the answer can fit in a 32-bit integer.  ",combination-sum-iv,Combination Sum IV,"Array, Dynamic Programming",2
"Given a data stream input of non-negative integers a1, a2, ..., an, summarize the numbers seen so far as a list of disjoint intervals. Implement the SummaryRanges class:  SummaryRanges() Initializes the object with an empty stream. void addNum(int value) Adds the integer value to the stream. int[][] getIntervals() Returns a summary of the integers in the stream currently as a list of disjoint intervals [starti, endi]. The answer should be sorted by starti.   ",data-stream-as-disjoint-intervals,Data Stream as Disjoint Intervals,"Binary Search, Design, Ordered Set",2
"Given two integer arrays nums1 and nums2, return an array of their intersection. Each element in the result must be unique and you may return the result in any order.  ",intersection-of-two-arrays,Intersection of Two Arrays,"Array, Hash Table, Two Pointers, Binary Search, Sorting",2
"You are given a 0-indexed array of unique strings words. A palindrome pair is a pair of integers (i, j) such that:  0 <= i, j < words.length, i != j, and words[i] + words[j] (the concatenation of the two strings) is a palindrome.  Return an array of all the palindrome pairs of words.  ",palindrome-pairs,Palindrome Pairs,"Array, Hash Table, String, Trie",2
"You are playing the following Nim Game with your friend:  Initially, there is a heap of stones on the table. You and your friend will alternate taking turns, and you go first. On each turn, the person whose turn it is will remove 1 to 3 stones from the heap. The one who removes the last stone is the winner.  Given n, the number of stones in the heap, return true if you can win the game assuming both you and your friend play optimally, otherwise return false.  ",nim-game,Nim Game,"Math, Brainteaser, Game Theory",2
"Design an iterator that supports the peek operation on an existing iterator in addition to the hasNext and the next operations. Implement the PeekingIterator class:  PeekingIterator(Iterator<int> nums) Initializes the object with the given integer iterator iterator. int next() Returns the next element in the array and moves the pointer to the next element. boolean hasNext() Returns true if there are still elements in the array. int peek() Returns the next element in the array without moving the pointer.  Note: Each language may have a different implementation of the constructor and Iterator, but they all support the int next() and boolean hasNext() functions.  ",peeking-iterator,Peeking Iterator,"Array, Design, Iterator",2
"Given an integer n, return the least number of perfect square numbers that sum to n. A perfect square is an integer that is the square of an integer; in other words, it is the product of some integer with itself. For example, 1, 4, 9, and 16 are perfect squares while 3 and 11 are not.  ",perfect-squares,Perfect Squares,"Math, Dynamic Programming, Breadth-First Search",2
"An ugly number is a positive integer whose prime factors are limited to 2, 3, and 5. Given an integer n, return the nth ugly number.  ",ugly-number-ii,Ugly Number II,"Hash Table, Math, Dynamic Programming, Heap (Priority Queue)",2
"Given the root of a binary tree, return all root-to-leaf paths in any order. A leaf is a node with no children.  ",binary-tree-paths,Binary Tree Paths,"String, Backtracking, Tree, Depth-First Search, Binary Tree",2
"Given a binary search tree (BST), find the lowest common ancestor (LCA) node of two given nodes in the BST. According to the definition of LCA on Wikipedia: “The lowest common ancestor is defined between two nodes p and q as the lowest node in T that has both p and q as descendants (where we allow a node to be a descendant of itself).”  ",lowest-common-ancestor-of-a-binary-search-tree,Lowest Common Ancestor of a Binary Search Tree,"Tree, Depth-First Search, Binary Search Tree, Binary Tree",2
"Given the root of a binary search tree, and an integer k, return the kth smallest value (1-indexed) of all the values of the nodes in the tree.  ",kth-smallest-element-in-a-bst,Kth Smallest Element in a BST,"Tree, Depth-First Search, Binary Search Tree, Binary Tree",2
"Given an integer array nums and an integer k, return true if there are two distinct indices i and j in the array such that nums[i] == nums[j] and abs(i - j) <= k.  ",contains-duplicate-ii,Contains Duplicate II,"Array, Hash Table, Sliding Window",2
"Given the root of a binary tree, imagine yourself standing on the right side of it, return the values of the nodes you can see ordered from top to bottom.  ",binary-tree-right-side-view,Binary Tree Right Side View,"Tree, Depth-First Search, Breadth-First Search, Binary Tree",2
"Reverse bits of a given 32 bits unsigned integer. Note:  Note that in some languages, such as Java, there is no unsigned integer type. In this case, both input and output will be given as a signed integer type. They should not affect your implementation, as the integer's internal binary representation is the same, whether it is signed or unsigned. In Java, the compiler represents the signed integers using 2's complement notation. Therefore, in Example 2 above, the input represents the signed integer -3 and the output represents the signed integer -1073741825.   ",reverse-bits,Reverse Bits,"Divide and Conquer, Bit Manipulation",2
"Given a 1-indexed array of integers numbers that is already sorted in non-decreasing order, find two numbers such that they add up to a specific target number. Let these two numbers be numbers[index1] and numbers[index2] where 1 <= index1 < index2 <= numbers.length. Return the indices of the two numbers, index1 and index2, added by one as an integer array [index1, index2] of length 2. The tests are generated such that there is exactly one solution. You may not use the same element twice. Your solution must use only constant extra space.  ",two-sum-ii-input-array-is-sorted,Two Sum II - Input Array Is Sorted,"Array, Two Pointers, Binary Search",2
"A peak element is an element that is strictly greater than its neighbors. Given a 0-indexed integer array nums, find a peak element, and return its index. If the array contains multiple peaks, return the index to any of the peaks. You may imagine that nums[-1] = nums[n] = -∞. In other words, an element is always considered to be strictly greater than a neighbor that is outside the array. You must write an algorithm that runs in O(log n) time.  ",find-peak-element,Find Peak Element,"Array, Binary Search",2
"You are given an array of strings tokens that represents an arithmetic expression in a Reverse Polish Notation. Evaluate the expression. Return an integer that represents the value of the expression. Note that:  The valid operators are '+', '-', '*', and '/'. Each operand may be an integer or another expression. The division between two integers always truncates toward zero. There will not be any division by zero. The input represents a valid arithmetic expression in a reverse polish notation. The answer and all the intermediate calculations can be represented in a 32-bit integer.   ",evaluate-reverse-polish-notation,Evaluate Reverse Polish Notation,"Array, Math, Stack",2
"Given the head of a linked list, return the node where the cycle begins. If there is no cycle, return null. There is a cycle in a linked list if there is some node in the list that can be reached again by continuously following the next pointer. Internally, pos is used to denote the index of the node that tail's next pointer is connected to (0-indexed). It is -1 if there is no cycle. Note that pos is not passed as a parameter. Do not modify the linked list.  ",linked-list-cycle-ii,Linked List Cycle II,"Hash Table, Linked List, Two Pointers",2
"A transformation sequence from word beginWord to word endWord using a dictionary wordList is a sequence of words beginWord -> s1 -> s2 -> ... -> sk such that:  Every adjacent pair of words differs by a single letter. Every si for 1 <= i <= k is in wordList. Note that beginWord does not need to be in wordList. sk == endWord  Given two words, beginWord and endWord, and a dictionary wordList, return all the shortest transformation sequences from beginWord to endWord, or an empty list if no such sequence exists. Each sequence should be returned as a list of the words [beginWord, s1, s2, ..., sk].  ",word-ladder-ii,Word Ladder II,"Hash Table, String, Backtracking, Breadth-First Search",2
"Given an integer rowIndex, return the rowIndexth (0-indexed) row of the Pascal's triangle. In Pascal's triangle, each number is the sum of the two numbers directly above it as shown:   ",pascals-triangle-ii,Pascal's Triangle II,"Array, Dynamic Programming",2
"Given the root of a binary tree and an integer targetSum, return all root-to-leaf paths where the sum of the node values in the path equals targetSum. Each path should be returned as a list of the node values, not node references. A root-to-leaf path is a path starting from the root and ending at any leaf node. A leaf is a node with no children.  ",path-sum-ii,Path Sum II,"Backtracking, Tree, Depth-First Search, Binary Tree",2
"Given an integer array nums where the elements are sorted in ascending order, convert it to a height-balanced binary search tree.  ",convert-sorted-array-to-binary-search-tree,Convert Sorted Array to Binary Search Tree,"Array, Divide and Conquer, Tree, Binary Search Tree, Binary Tree",2
"Given the head of a sorted linked list, delete all duplicates such that each element appears only once. Return the linked list sorted as well.  ",remove-duplicates-from-sorted-list,Remove Duplicates from Sorted List,Linked List,2
"Given the head of a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list. Return the linked list sorted as well.  ",remove-duplicates-from-sorted-list-ii,Remove Duplicates from Sorted List II,"Linked List, Two Pointers",2
"Given two integers n and k, return all possible combinations of k numbers chosen from the range [1, n]. You may return the answer in any order.  ",combinations,Combinations,Backtracking,2
"You are given an m x n integer array grid. There is a robot initially located at the top-left corner (i.e., grid[0][0]). The robot tries to move to the bottom-right corner (i.e., grid[m - 1][n - 1]). The robot can only move either down or right at any point in time. An obstacle and space are marked as 1 or 0 respectively in grid. A path that the robot takes cannot include any square that is an obstacle. Return the number of possible unique paths that the robot can take to reach the bottom-right corner. The testcases are generated so that the answer will be less than or equal to 2 * 109.  ",unique-paths-ii,Unique Paths II,"Array, Dynamic Programming, Matrix",2
"Given a string s consisting of words and spaces, return the length of the last word in the string. A word is a maximal substring consisting of non-space characters only.  ",length-of-last-word,Length of Last Word,String,2
"You are given a 0-indexed array of integers nums of length n. You are initially positioned at nums[0]. Each element nums[i] represents the maximum length of a forward jump from index i. In other words, if you are at nums[i], you can jump to any nums[i + j] where:  0 <= j <= nums[i] and i + j < n  Return the minimum number of jumps to reach nums[n - 1]. The test cases are generated such that you can reach nums[n - 1].  ",jump-game-ii,Jump Game II,"Array, Dynamic Programming, Greedy",2
"Given a string containing just the characters '(' and ')', return the length of the longest valid (well-formed) parentheses substring.  ",longest-valid-parentheses,Longest Valid Parentheses,"String, Dynamic Programming, Stack",2
"You are given a string s and an array of strings words. All the strings of words are of the same length. A concatenated substring in s is a substring that contains all the strings of any permutation of words concatenated.  For example, if words = [""ab"",""cd"",""ef""], then ""abcdef"", ""abefcd"", ""cdabef"", ""cdefab"", ""efabcd"", and ""efcdab"" are all concatenated strings. ""acdbef"" is not a concatenated substring because it is not the concatenation of any permutation of words.  Return the starting indices of all the concatenated substrings in s. You can return the answer in any order.  ",substring-with-concatenation-of-all-words,Substring with Concatenation of All Words,"Hash Table, String, Sliding Window",2
"Given an integer array nums and an integer val, remove all occurrences of val in nums in-place. The order of the elements may be changed. Then return the number of elements in nums which are not equal to val. Consider the number of elements in nums which are not equal to val be k, to get accepted, you need to do the following things:  Change the array nums such that the first k elements of nums contain the elements which are not equal to val. The remaining elements of nums are not important as well as the size of nums. Return k.  Custom Judge: The judge will test your solution with the following code:  int[] nums = [...]; // Input array int val = ...; // Value to remove int[] expectedNums = [...]; // The expected answer with correct length.                             // It is sorted with no values equaling val.  int k = removeElement(nums, val); // Calls your implementation  assert k == expectedNums.length; sort(nums, 0, k); // Sort the first k elements of nums for (int i = 0; i < actualLength; i++) {     assert nums[i] == expectedNums[i]; }  If all assertions pass, then your solution will be accepted.  ",remove-element,Remove Element,"Array, Two Pointers",2
"Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0. Assume the environment does not allow you to store 64-bit integers (signed or unsigned).  ",reverse-integer,Reverse Integer,Math,2
"You are given an array nums of positive integers. In one operation, you can choose any number from nums and reduce it to exactly half the number. (Note that you may choose this reduced number in future operations.) Return the minimum number of operations to reduce the sum of nums by at least half.  ",minimum-operations-to-halve-array-sum,Minimum Operations to Halve Array Sum,"Array, Greedy, Heap (Priority Queue)",1
"You are given an integer array nums consisting of 2 * n integers. You need to divide nums into n pairs such that:  Each element belongs to exactly one pair. The elements present in a pair are equal.  Return true if nums can be divided into n pairs, otherwise return false.  ",divide-array-into-equal-pairs,Divide Array Into Equal Pairs,"Array, Hash Table, Bit Manipulation, Counting",1
"You are given the head of a linked list, which contains a series of integers separated by 0's. The beginning and end of the linked list will have Node.val == 0. For every two consecutive 0's, merge all the nodes lying in between them into a single node whose value is the sum of all the merged nodes. The modified list should not contain any 0's. Return the head of the modified linked list.  ",merge-nodes-in-between-zeros,Merge Nodes in Between Zeros,"Linked List, Simulation",1
"Given a string s consisting of only the characters 'a' and 'b', return true if every 'a' appears before every 'b' in the string. Otherwise, return false.  ",check-if-all-as-appears-before-all-bs,Check if All A's Appears Before All B's,String,1
"Given an integer n, return true if n has exactly three positive divisors. Otherwise, return false. An integer m is a divisor of n if there exists an integer k such that n = k * m.  ",three-divisors,Three Divisors,Math,1
"You are given a string s consisting of lowercase English letters, and an integer k. First, convert s into an integer by replacing each letter with its position in the alphabet (i.e., replace 'a' with 1, 'b' with 2, ..., 'z' with 26). Then, transform the integer by replacing it with the sum of its digits. Repeat the transform operation k times in total. For example, if s = ""zbax"" and k = 2, then the resulting integer would be 8 by the following operations:  Convert: ""zbax"" ➝ ""(26)(2)(1)(24)"" ➝ ""262124"" ➝ 262124 Transform #1: 262124 ➝ 2 + 6 + 2 + 1 + 2 + 4 ➝ 17 Transform #2: 17 ➝ 1 + 7 ➝ 8  Return the resulting integer after performing the operations described above.  ",sum-of-digits-of-string-after-convert,Sum of Digits of String After Convert,"String, Simulation",1
"There is an undirected star graph consisting of n nodes labeled from 1 to n. A star graph is a graph where there is one center node and exactly n - 1 edges that connect the center node with every other node. You are given a 2D integer array edges where each edges[i] = [ui, vi] indicates that there is an edge between the nodes ui and vi. Return the center of the given star graph.  ",find-center-of-star-graph,Find Center of Star Graph,Graph,1
"Given n points on a 2D plane where points[i] = [xi, yi], Return the widest vertical area between two points such that no points are inside the area. A vertical area is an area of fixed-width extending infinitely along the y-axis (i.e., infinite height). The widest vertical area is the one with the maximum width. Note that points on the edge of a vertical area are not considered included in the area.  ",widest-vertical-area-between-two-points-containing-no-points,Widest Vertical Area Between Two Points Containing No Points,"Array, Sorting",1
"There are numBottles water bottles that are initially full of water. You can exchange numExchange empty water bottles from the market with one full water bottle. The operation of drinking a full water bottle turns it into an empty bottle. Given the two integers numBottles and numExchange, return the maximum number of water bottles you can drink.  ",water-bottles,Water Bottles,"Math, Simulation",1
"You are given an alphanumeric string s. (Alphanumeric string is a string consisting of lowercase English letters and digits). You have to find a permutation of the string where no letter is followed by another letter and no digit is followed by another digit. That is, no two adjacent characters have the same type. Return the reformatted string or return an empty string if it is impossible to reformat the string.  ",reformat-the-string,Reformat The String,String,1
"A happy string is a string that:  consists only of letters of the set ['a', 'b', 'c']. s[i] != s[i + 1] for all values of i from 1 to s.length - 1 (string is 1-indexed).  For example, strings ""abc"", ""ac"", ""b"" and ""abcbabcbcb"" are all happy strings and strings ""aa"", ""baa"" and ""ababbc"" are not happy strings. Given two integers n and k, consider a list of all happy strings of length n sorted in lexicographical order. Return the kth string of this list or return an empty string if there are less than k happy strings of length n.  ",the-k-th-lexicographical-string-of-all-happy-strings-of-length-n,The k-th Lexicographical String of All Happy Strings of Length n,"String, Backtracking",1
"Given an array of integers arr, a lucky integer is an integer that has a frequency in the array equal to its value. Return the largest lucky integer in the array. If there is no lucky integer return -1.  ",find-lucky-integer-in-an-array,Find Lucky Integer in an Array,"Array, Hash Table, Counting",1
"Given the string s, return the size of the longest substring containing each vowel an even number of times. That is, 'a', 'e', 'i', 'o', and 'u' must appear an even number of times.  ",find-the-longest-substring-containing-vowels-in-even-counts,Find the Longest Substring Containing Vowels in Even Counts,"Hash Table, String, Bit Manipulation, Prefix Sum",1
"Given a string s. Return all the words vertically in the same order in which they appear in s. Words are returned as a list of strings, complete with spaces when is necessary. (Trailing spaces are not allowed). Each word would be put on only one column and that in one column there will be only one word.  ",print-words-vertically,Print Words Vertically,"Array, String, Simulation",1
"There is a room with n bulbs labeled from 1 to n that all are turned on initially, and four buttons on the wall. Each of the four buttons has a different functionality where:  Button 1: Flips the status of all the bulbs. Button 2: Flips the status of all the bulbs with even labels (i.e., 2, 4, ...). Button 3: Flips the status of all the bulbs with odd labels (i.e., 1, 3, ...). Button 4: Flips the status of all the bulbs with a label j = 3k + 1 where k = 0, 1, 2, ... (i.e., 1, 4, 7, 10, ...).  You must make exactly presses button presses in total. For each press, you may pick any of the four buttons to press. Given the two integers n and presses, return the number of different possible statuses after performing all presses button presses.  ",bulb-switcher-ii,Bulb Switcher II,"Math, Bit Manipulation, Depth-First Search, Breadth-First Search",1
